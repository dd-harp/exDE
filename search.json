[{"path":"https://dd-harp.github.io/exDE/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 exDE authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dd-harp.github.io/exDE/articles/Contributing.html","id":"sec1","dir":"Articles","previous_headings":"","what":"Git workflow","title":"Contributing","text":"exDE project hosted GitHub (repository), use Git workflow similar “Gitflow” (albeit without separate release branch, main takes role), described . Git workflow way use repository way invite collaboration organized way protects latest stable version software unintended changes. new Git need reminders, please check excellent documentation Atlassian. recommend reading “Getting Started” learn set repository, followed “Collaborating” learn work branches, pull requests, merging, common Git activities. workflow designed around branches. main, dev, gh-pages branches always exist repository. branches exist long person(s) working need , deleted merged dev. main: branch contains latest version release exDE, updated CRAN version also updated. PRs submitted except core dev team, updated main mean need update package CRAN various housekeeping tasks accompany version update (.e. create archival release update accepted CRAN). dev: branch PRs collaborators made . version code dev always useable (.e. pass automated tests), contain latest cutting edge features. Periodically dev accumulated sufficient number new features, member core dev team make PR dev main. main updated update CRAN package, often, CRAN request package maintainers submit updates “every 1–2 months”. gh-pages: branch exists support GitHub pages website (one browsing right now). updated automatically pkgdown continuous integration workflow rebuilds website main pushed (.e. PR merged main). gh-pages considered “read-” branch, even core dev team. feat/*: branches starting feat/ collaborators (core dev) names branches updating including new features, including limited code, documentation, tests. example, branch improved documentation document called feat/UpdateContributing. PR feat/ branch merged dev, feat/ branch deleted. PRs never made feat/ branches main. bugfix/*: small bugfixes (spelling errors, misnamed variables, etc), may appropriate make bugfix/ branch. rules apply feat/ branches. branches use GitHub’s branch protection rules enforce rules. Core dev team members can access going Settings -> Branches. main dev protected deletion. PRs made dev must reviewed approved least 1 reviewer allowed merged.  show example workflow . main branch, blue, starts left side, dev created , purple. , two feat/* bugfix/* branches created dev time, shown green. upper one two updates merged back dev, via pull request. pull request, lower one must pull updates dev working latest version code. another update, ready merged dev via pull request. point, decide two features enough version update, make pull request dev main update version 0.1. merged, can start making feat/* bugfix/* branches dev start developing version 0.2!","code":""},{"path":"https://dd-harp.github.io/exDE/articles/Contributing.html","id":"example","dir":"Articles","previous_headings":"Git workflow","what":"Example","title":"Contributing","text":"Let’s say great idea new feature, change improve document. ’s get started Git workflow get feature road merged exDE software. Please note, assume familiarity Git commands . reference meaning commands, please see Git documentation. start work exDE, first clone repository. terminal window, navigate directory want exDE folder appear , run git clone git@github.com:dd-harp/exDE.git, use SSH keys, git clone https://github.com/dd-harp/exDE.git clone HTTPS. links can found click green “Code” button main repository page. clone repository, go inside cd exDE. run git fetch --retrieves information branches remote (repository GitHub website) local repository (one computer). Now switch dev branch git checkout dev. can make sure ’s date running git pull origin dev. Let’s say want call new feature branch feat/UpdateContributing. can make switch running git checkout -b feat/UpdateContributing. push new branch remote repository, run git push origin feat/UpdateContributing. now appear list branches. Now, make changes! recommend editing package RStudio using R project file exDE.Rproj repository. explained Section 3. ready push changes, use git add either add files commit one one, know want add new /modified files, can use git add .. Run git commit -m \"message explaining changes \" make commit message. mind many small commits, Git style, please feel pressure make large commits. Now git push origin feat/UpdateContributing push commit remote branch feat/UpdateContributing! navigate branch GitHub repository, see changes. Now repeat steps 6 9 ready start testing changes submit pull request (covered Sections 4 5).","code":""},{"path":"https://dd-harp.github.io/exDE/articles/Contributing.html","id":"sec2","dir":"Articles","previous_headings":"","what":"The exDE R package","title":"Contributing","text":"exDE R package, going making substantial changes, necessary sense organized package must rebuilt creating documentation, exporting functions, testing. extensive documentation R package structured comes official R manual, Writing R Extensions. shorter guide tips current best practice book R Packages, unfamiliar R packages, reccomend briefly skimming book starting point. building exDE supported pkgdown, responsible automatically building documentation website browsing right now, testthat used test package. files top level directory important aware : _pkgdown.yml: controls website generated, explained article. add delete functions objects documentation package, add delete vignettes, must modify file website build properly. DESCRIPTION: file provides critical information package, documentation official manual R packages book. updated version releases, include additional authors, add additional packages Imports Suggests. NAMESPACE: read-file produced running roxygen2 build documentation package, tells R functions exported package user’s R session load exDE library(exDE). never modified hand. NEWS.md: NEWS page package’s CRAN page well News tab GitHub pages website built file; modified dev team ready update main new version. information, see utils::news help file. README.md: main readme file displayed GitHub repository, main page GitHub pages website, README page package’s CRAN page. rest package organized directories. detail, recommend reading guides linked earlier. .github/: files control GitHub Actions used automatically test package PR made, automatically build package website, automatically check code coverage (% code checked tests). Much detail given Section 6. docs/: contains pkgdown website built pushed gh-pages automatically GitHub Action. trigger manual (local) build website test something using pkgdown::build_site, build folder. folder considered read-. inst/: folder serves many purposes general R packages (see resources details), currently contains CITATION file used generate citation found utils::citation. man/: folder contains package function/object documentation automatically generated roxygen2, considered read-. R/: source code package lives ; describe naming convention files can quickly identify existing code , organize name new code. tests/: within folder sub-directory testthat/ contains automated tests included package. test models initialized equilibrium remain equilibrium integrated time. vignettes/: folder contains .Rmd files contains vignettes R package, longer form articles document specific functionality exDE. available GitHub pages website via top drop menus package’s CRAN page.","code":""},{"path":"https://dd-harp.github.io/exDE/articles/Contributing.html","id":"r-folder","dir":"Articles","previous_headings":"The exDE R package","what":"R/ folder","title":"Contributing","text":"model component “base” file ending -interface defines generic interface model component must implement. example human-interface.R defines generic methods human disease model must implement human-SIS.R defines specific methods SIS model human disease dynamics. adult-GeRM.R: generalized Ross-Macdonald model adult mosquito dynamics. aquatic-basic.R: basic competition model aquatic mosquito dynamics. aquatic-trace.R: trace (exogenously forced) model aquatic mosquito dynamics. human-SIS.R: SIS model human disease dynamics. human-SIP.R: SIP model human disease dynamics. human-hMoI.R: hybrid MoI model human disease dynamics. exogenous-null: null () exogenous forcing. vc-null.R: null () vector control. vc-lemenach.R: Le Menach model ITN based adult vector control. diffeqn.R: exDE generalized differential equations implement framework; typically modified. metrics.R: spatial metrics (defined Spatial Dynamics paper) utils.R: utility functions","code":""},{"path":"https://dd-harp.github.io/exDE/articles/Contributing.html","id":"sec3","dir":"Articles","previous_headings":"","what":"Making large changes or additions to exDE","title":"Contributing","text":"reading Section 2 reasonable grasp exDE R package organized, really understand implement new models, detail necessary files one actually modify add. also describe best practices contributors add package making large change. Let’s say someone wanted add new human disease model, say SIR model. basic steps : Within R/, make new file human-SIR.R implement generic methods human-interface.R new model. Also make function named something like make_parameters_human_SIR modify parameter environment implement SIR model. can check human disease models reference. RStudio, run Build -> Document (control/command + shift + D) run roxygen2 builds functions documentation updates NAMESPACE new functions. run Build -> Install Package (control/command + shift + B) re-install load package. works opened exDE.Rproj file RStudio project. Make new vignette named something like “human_vignette.Rmd” vignettes/ describing model parameters, perhaps simple simulation . Make test named something like test-human-sir.R tests/testthat/ tests SIR model behaves expected conditions outcome known (e.g. infected persons present, number susceptible persons can never decrease). Please see testthat documentation R packages chapter testing information. added new functions vignettes, add _pkgdown.yml file appropriate place. can use pkgdown::build_site point test website still builds. go details test package locally Section 4 make pull request Section 5. writing new model modifying existing one, please note exDE achieves modularity extensive use S3 dispatch, similar single dispatch programming languages. details base::UseMethod S3 chapter Advanced R. Use S3 dispatch appears extensively source code exDE. writing new functions, must documented. , existing code provides good reference. exDE depends upon roxygen2 build documentation, website provides help write appropriate tags (e.g. #' @export makes function appear exDE NAMESPACE).","code":""},{"path":"https://dd-harp.github.io/exDE/articles/Contributing.html","id":"sec4","dir":"Articles","previous_headings":"","what":"How to test locally","title":"Contributing","text":"making changes exDE submitting PR, take time local tests make sure package still works. extremely important make sure implement changes, re-document re-install package. RStudio, Build -> Document (control/command + shift + D) re-documents package Build -> Install Package (control/command + shift + B) re-installs package. Without package NAMESPACE file may include changes, library(exDE) using recent version code.","code":""},{"path":"https://dd-harp.github.io/exDE/articles/Contributing.html","id":"testthat","dir":"Articles","previous_headings":"How to test locally","what":"testthat","title":"Contributing","text":"added tests, changed existing code want make sure tests still pass, run testthat::test_local run tests. error warning appears, re-run tests make sure false positive (due numerical precision errors, small fraction tests give false positive results). error comes consistently, please fix offending code continuing onward. Remember, tests run tests/testthat can check code specifically put tested! large changes tests cover functionality cases expected behavior known advance. unsure make appropriate tests, please either consult existing test files, make PR without tests tell reviewer yet included tests need help making .","code":""},{"path":"https://dd-harp.github.io/exDE/articles/Contributing.html","id":"devtools","dir":"Articles","previous_headings":"How to test locally","what":"devtools","title":"Contributing","text":"crucial function use devtools::check; includes running local tests also extensive set additional checks R CMD check (see official documentation exactly ). also rebuilds vignettes, takes longer just running tests, normally done seldom, one ready submit PR.","code":""},{"path":"https://dd-harp.github.io/exDE/articles/Contributing.html","id":"pkgdown","dir":"Articles","previous_headings":"How to test locally","what":"pkgdown","title":"Contributing","text":"always good idea make sure package website still builds making changes. added removed functions, changed function names, added removed vignettes, need updated _pkgdown.yml accordingly. make sure everything works expected, run pkgdown::build_site, build website locally docs/ folder (open automatically browser done). Please address problems builds successfully.","code":""},{"path":[]},{"path":"https://dd-harp.github.io/exDE/articles/Contributing.html","id":"how-to-make-a-pr","dir":"Articles","previous_headings":"How to make or review a pull request","what":"How to make a PR","title":"Contributing","text":"point, might little tired reading, maybe somewhat anxious actually contributing . good time say making PR can absolutely collaborative process. following previous sections local tests working, think idea new feature work good addition exDE, please consider submitting PR tagging persons dev team can help get past finish line. make pull request, first, navigate branch made changes (.e. feat/* bugfix/* branch). open PR, follow GitHub documentation Atlassian documentation, remember PRs made dev (e.g. dev “base”). making PR, prompted enter description explains PR . Please ensure PR include many disparate modifications, represents self-contained piece work (.e. submit PRs change human mosquito model; please submit two separate PRs ). Please make sure text description contains following elements: PR addresses solves active issue, tag PR (.e. addresses issue 75, type text box #75 GitHub automatically link two; can also just type # GitHub begin automatically link open issues). PR adds new files R/, tests/testthat, vignettes please list write brief description one. apply auto-generated files (.e. anything docs/, man/, NAMESPACE). PR significantly modifies files, please list write brief descriptions changed. apply auto-generated files (.e. anything docs/, man/, NAMESPACE). -progress PR (.e. tests pass), please tag someone team help describe specific problems encountering. Finally, crucial, select someone review PR using “Reviewers” tab upper right hand corner page. PR merged dev passed review least one team member. point review process can start. reviewer may ask additional changes, remember keep making branch working . PR merged dev, please delete old feat/* bugfix/* branch.","code":""},{"path":"https://dd-harp.github.io/exDE/articles/Contributing.html","id":"how-to-review-a-pr","dir":"Articles","previous_headings":"How to make or review a pull request","what":"How to review a PR","title":"Contributing","text":"requested reviewer, ’s responsibility : Evaluate whether proposed addition within scope software (e.g. directly-transmitted diseases outside scope exDE). Ensure PR made dev . code passing tests, identify problems suggest solutions author (see Section 6 details ). PR makes significant modifications exDE, work author (already done ) PR tests vignettes document new functions, added _pkgdown.yml file new features appear website. general, exDE’s design philosophy elegant clear design mirrors mathematical description model preferred fast code cases decision made, please correct obvious inefficiencies (e.g. aware matrix operations try structure parentheses minimize computational cost). confident can provide helpful review addresses (possibly) mathematical, conceptual, design, software issues related PR, please either pass someone else bring additional reviewers. Please either familiar review GitHub docs review PRs. cases may necessary investigate issues locally, branch merged. Assuming branch called feat/MyFeature, : Navigate exDE repository computer git fetch --update information branches present remote git checkout -b feat/MyFeature switch branch git pull origin feat/MyFeature make sure includes recent commits Investigate locally, may push fixes feat/MyFeature sure alert PR author done may expect reviewer make changes branch problems resolved CI tests pass, PR ready merged dev! may want delete merged branch let author know can point.","code":""},{"path":"https://dd-harp.github.io/exDE/articles/Contributing.html","id":"sec6","dir":"Articles","previous_headings":"","what":"How to deal with continuous integration","title":"Contributing","text":"exDE use GitHub Actions automatically run continuous integration workflows, automated scripts run triggered certain events (.e. PRs pushing certain branches). 3 workflows run can found .github/workflows: check-standard.yaml: runs R CMD check several common operating systems (see official documentation ). runs time pull request made main dev. pkgdown.yaml: runs pkgdown::build_site_github_pages pushes new website gh-pages branch. runs pushes main (.e. PR merged main) new GitHub release made. test-coverage.yaml: runs covr::codecov updates exDE’s codecov integration. runs pushes main. three workflows standard R packages, originated https://github.com/r-lib/actions. workflows may encounter errors. panic happens. Errors can investigated clicking failing workflow Actions tab, clicking specific failing job(s) left hand side screen “Jobs”. errors displayed. Github Actions documentation also describes diagnose errors. Errors R-CMD-check stemming tests may sometimes due numerical errors; exDE can solve model floating point errors, sometimes false positive errors reported numerical routines encounter problems. Restart tests clicking “Re-run jobs” upper right hand see errors persist. Errors pkgdown likely cause ill-formed _pkgdown.yml file, please consult pkgdown documentation post issue get help. Finally encounter truly strange errors workflows (e.g. software installed, strange operating system specific errors, etc), may .yaml workflow scripts outdated need updated. case find latest updated workflow scripts https://github.com/r-lib/actions/tree/v2-branch/examples. , careful overwrite existing rules execute workflows (.e. update line name onward). can push update branch bugfix/check-standard.yaml, update workflow, example.","code":""},{"path":"https://dd-harp.github.io/exDE/articles/Contributing.html","id":"sec7","dir":"Articles","previous_headings":"","what":"How to get ready for a version update","title":"Contributing","text":"(dev team ) sufficient number new features added dev version number exDE increased, sufficient duration time passed since last update CRAN (“every 1–2 months”), time make PR dev main get ready update software. please make sure: open PRs (please resolve close updating version) feat/* bugfix/* branches deleted resolving open PRs update NEWS.md new version number significant additions (consider making links NEWS.md PRs included update) update DESCRIPTION new version number make sure website still builds (test devtools::build_site) please use rhub builder service check package builds without errors Windows using CRAN standards (can use function rhub::check_for_cran ) now ready create PR dev main. following standard procedure (Section 5) exception deleting dev (protected deletion), ready update CRAN version exDE. : make update file cran-comments.md informing CRAN version update, tests pass, etc; follow guide R packages book. use devtools::release actually submit package CRAN, function asks many useful questions make sure package actually ready submitted. new version accepted CRAN make new GitHub release accompany new version. celebrate, go rest.","code":""},{"path":"https://dd-harp.github.io/exDE/articles/Contributing.html","id":"sec8","dir":"Articles","previous_headings":"","what":"How to report bugs or raise issues?","title":"Contributing","text":"expect common way users interact GitHub issues tab. first point contact exDE team, please hesitate raise issues may either bug reports, questions, comments/suggestions. prefer rather less communication. considering large feature changes, may nice discuss dev team issue first making feat/* branch submitting PR; also great time solicit collaboration feature development! find bug, please remember include minimum reproducible example bug R code addition describing wrong. Please remember include: exDE version Operating System R version Steps recreate Expected behavior Actual behavior Minimum reproducible example (R code)","code":""},{"path":[]},{"path":"https://dd-harp.github.io/exDE/articles/adult_GeRM.html","id":"delay-differential-equations","dir":"Articles","previous_headings":"Differential Equations","what":"Delay Differential Equations","title":"A Generalized Ross-Macdonald Adult Mosquito Model","text":"equations implemented exDE::dMYZdt.GeRM_dde. \\[ \\dot{M} = \\Lambda - \\Omega\\cdot M \\] \\[ \\dot{G} = \\mbox{diag}(f) \\cdot (M-G) - \\nu G - \\Omega \\cdot G \\] \\[ \\dot{Y} = \\mbox{diag}(fq\\kappa) \\cdot (M-Y) - \\Omega \\cdot Y \\] \\[ \\dot{Z} = e^{-\\Omega \\tau} \\cdot \\mbox{diag}(fq\\kappa_{t-\\tau}) \\cdot (M_{t-\\tau}-Y_{t-\\tau}) - \\Omega \\cdot Z \\] Recall mosquito demography matrix describing mortality dispersal given : \\[ \\Omega =  \\mbox{diag(g)} + \\left(- {\\cal K}\\right) \\cdot \\mbox{diag}(\\sigma) \\]","code":""},{"path":"https://dd-harp.github.io/exDE/articles/adult_GeRM.html","id":"ordinary-differential-equations","dir":"Articles","previous_headings":"Differential Equations","what":"Ordinary Differential Equations","title":"A Generalized Ross-Macdonald Adult Mosquito Model","text":"equations implemented exDE::dMYZdt.GeRM_ode. system ODEs except equation giving rate change infectious mosquito density, becomes: \\[ \\dot{Z} = e^{-\\Omega \\tau} \\cdot \\mbox{diag}(fq\\kappa) \\cdot (M-Y) - \\Omega \\cdot Z \\] resulting set equations similar spirit simple model presented Smith & McKenzie (2004) mortality dispersal EIP accounted , time lag . transient dynamics ODE model equal DDE model, equilibrium values, numerical work requiring finding equilibrium points, faster ODE model can safely substituted.","code":""},{"path":"https://dd-harp.github.io/exDE/articles/adult_GeRM.html","id":"equilibrium-solutions","dir":"Articles","previous_headings":"","what":"Equilibrium solutions","title":"A Generalized Ross-Macdonald Adult Mosquito Model","text":"two logical ways begin solving non-trivial equilibrium. first assumes \\(\\Lambda\\) known, implies good knowledge mosquito ecology. second assumes \\(Z\\) known, implies knowledge biting rate human population. show .","code":""},{"path":"https://dd-harp.github.io/exDE/articles/adult_GeRM.html","id":"starting-with-lambda","dir":"Articles","previous_headings":"Equilibrium solutions","what":"Starting with \\(\\Lambda\\)","title":"A Generalized Ross-Macdonald Adult Mosquito Model","text":"Given \\(\\Lambda\\) can solve: \\[ M = \\Omega^{-1} \\cdot \\Lambda \\] given \\(M\\) set \\(\\dot{Y}\\) zero factor \\(Y\\) get: \\[ Y = (\\mbox{diag}(fq\\kappa) + \\Omega)^{-1} \\cdot \\mbox{diag}(fq\\kappa) \\cdot M \\] set \\(\\dot{Z}\\) zero get: \\[ Z = \\Omega^{-1} \\cdot e^{-\\Omega \\tau} \\cdot \\mbox{diag}(fq\\kappa) \\cdot (M-Y) \\] dynamics \\(G\\) independent infection dynamics, can solve given \\(M\\) : \\[ G = (\\mbox{diag}(\\nu) + \\Omega + \\mbox{diag}(f))^{-1} \\cdot \\mbox{diag}(f) \\cdot M \\]","code":""},{"path":"https://dd-harp.github.io/exDE/articles/adult_GeRM.html","id":"starting-with-z","dir":"Articles","previous_headings":"Equilibrium solutions","what":"Starting with \\(Z\\)","title":"A Generalized Ross-Macdonald Adult Mosquito Model","text":"common start estimate \\(Z\\), perhaps derived estimated EIR (entomological inoculation rate). Given \\(Z\\), can calculate state variables \\(\\Lambda\\). numerical implementation, note \\((e^{-\\Omega\\tau})^{-1} = e^{\\Omega\\tau}\\). \\[ M-Y = \\mbox{diag}(1/fq\\kappa) \\cdot (e^{-\\Omega\\tau})^{-1} \\cdot \\Omega \\cdot Z \\] \\[ Y = \\Omega^{-1} \\cdot \\mbox{diag}(fq\\kappa) \\cdot (M-Y) \\] \\[ M = (M - Y) + Y \\] \\[ \\Lambda = \\Omega \\cdot M \\] can use equation \\(G\\) .","code":""},{"path":"https://dd-harp.github.io/exDE/articles/adult_GeRM.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"A Generalized Ross-Macdonald Adult Mosquito Model","text":"show example starting solving model equilibrium. Please note runs adult mosquito model users read fully worked example run full simulation. set parameters simulation 3 patches. Now solve equilibrium values. Now set parameter environment correct class using exDE::make_parameters_MYZ_GeRM_ode, set indices exDE::make_indices. can set initial conditions vector use deSolve::ode solve model. Please note need use exDE::MosquitoBehavior set bionomic parameters equilibrium passed exDE::dMYZdt; necessary running adult mosquito component alone without full model. Normally values computed within exDE::xDE_diffeqn.","code":"library(exDE) library(expm) library(deSolve) library(data.table) library(ggplot2) nPatches <- 3 f <- 0.3 q <- 0.9 g <- 1/20 sigma <- 1/10 tau <- 11 nu <- 1/2 eggsPerBatch <- 30  calK <- matrix(0, nPatches, nPatches) calK[1, 2:3] <- c(0.2, 0.8) calK[2, c(1,3)] <- c(0.5, 0.5) calK[3, 1:2] <- c(0.7, 0.3) calK <- t(calK)  Omega <- make_Omega(g, sigma, calK, nPatches) Upsilon <- expm::expm(-Omega * tau)  kappa <- c(0.1, 0.075, 0.025) Lambda <- c(5, 10, 8)  params <- list(   nPatches = nPatches ) params <- list2env(params) Omega_inv <- solve(Omega)  M_eq <- as.vector(Omega_inv %*% Lambda) G_eq <- as.vector(solve(diag(nu+f, nPatches) + Omega) %*% diag(f, nPatches) %*% M_eq) Y_eq <- as.vector(solve(diag(f*q*kappa) + Omega) %*% diag(f*q*kappa) %*% M_eq) Z_eq <- as.vector(Omega_inv %*% Upsilon %*% diag(f*q*kappa) %*% (M_eq - Y_eq)) make_parameters_MYZ_GeRM_ode(pars = params, g = g, sigma = sigma, calK = calK, f = f, q = q, nu = nu, eggsPerBatch = eggsPerBatch, tau = tau, M0 = rep(0, nPatches), G0 = rep(0, nPatches), Y0 = rep(0, nPatches), Z0 = rep(0, nPatches))   make_indices(params)  y0 <- rep(NaN, params$max_ix) y0[params$M_ix] <- M_eq y0[params$G_ix] <- G_eq y0[params$Y_ix] <- Y_eq y0[params$Z_ix] <- Z_eq y0[params$Upsilon_ix] <- as.vector(Upsilon)  MosyBehavior <- MosquitoBehavior(0, y, params)  out <- deSolve::ode(y = y0, times = 0:50, func = function(t, y, pars, Lambda, kappa, MosyBehavior) {   list(dMYZdt(t, y, pars, Lambda, kappa, MosyBehavior)) }, parms = params, method = 'lsoda', Lambda = Lambda, kappa = kappa, MosyBehavior = MosyBehavior)  colnames(out)[params$M_ix+1] <- paste0('M_', 1:params$nPatches) colnames(out)[params$G_ix+1] <- paste0('G_', 1:params$nPatches) colnames(out)[params$Y_ix+1] <- paste0('Y_', 1:params$nPatches) colnames(out)[params$Z_ix+1] <- paste0('Z_', 1:params$nPatches) out <- out[, -c(params$Upsilon_ix+1)]  out <- as.data.table(out) out <- melt(out, id.vars = 'time') out[, c(\"Component\", \"Patch\") := tstrsplit(variable, '_', fixed = TRUE)] out[, variable := NULL]  ggplot(data = out, mapping = aes(x = time, y = value, color = Patch)) +   geom_line() +   facet_wrap(. ~ Component, scales = 'free') +   theme_bw()"},{"path":"https://dd-harp.github.io/exDE/articles/aqua_basic.html","id":"differential-equations","dir":"Articles","previous_headings":"","what":"Differential Equations","title":"Basic Competition Aquatic Mosquito Model","text":"Given \\(\\Lambda\\) egg laying rate adult mosquito population formulate solve dynamical model aquatic mosquitoes give emergence rate. However, example simply use trace-based (forced) emergence model, \\(\\Lambda\\) completely specifies aquatic mosquitoes. simplest model aquatic (immature) mosquito dynamics negative feedback (density dependence) : \\[ \\dot{L} = \\eta - (\\psi+\\phi+\\theta L)L \\] equations allow number larval habitats \\(l\\) differ \\(p\\), general emergence rate given : \\[ \\Lambda = \\mathcal{N}\\cdot \\alpha \\] \\(\\mathcal{N}\\) \\(p\\times l\\) matrix \\(\\alpha\\) length \\(l\\) column vector given : \\[ \\alpha = \\psi L \\]","code":""},{"path":"https://dd-harp.github.io/exDE/articles/aqua_basic.html","id":"equilibrium-solutions","dir":"Articles","previous_headings":"","what":"Equilibrium solutions","title":"Basic Competition Aquatic Mosquito Model","text":"general, know value \\(\\Lambda\\) equilibrium can solve \\(L\\) directly using two equations. can consider \\(\\theta\\), strength density dependence unknown solve : \\[ \\theta = (\\eta - \\psi L - \\phi L) / L^2 \\]","code":""},{"path":"https://dd-harp.github.io/exDE/articles/aqua_basic.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Basic Competition Aquatic Mosquito Model","text":"run simple example 3 aquatic habitats equilibrium. use exDE::make_parameters_L_basic set parameters. Please note runs aquatic mosquito component users read fully worked example run full simulation.","code":"library(exDE) library(deSolve) library(data.table) library(ggplot2) nHabitats <- 3 alpha <- c(10, 50, 20) eta <- c(250, 500, 170) psi <- 1/10 phi <- 1/12  L <- alpha/psi theta <- (eta - psi*L - phi*L)/(L^2)  params <- list(   nHabitats = nHabitats ) params <- list2env(params)  make_parameters_L_basic(pars = params, psi = psi, phi = phi, theta = theta, L0 = L) make_indices(params)  y0 <- L  out <- deSolve::ode(y = y0, times = 0:50, func = function(t, y, pars, eta) {   list(dLdt(t, y, pars, eta)) }, parms = params, method = 'lsoda', eta = eta)  colnames(out)[params$L_ix+1] <- paste0('L_', 1:params$nHabitats)  out <- as.data.table(out) out <- melt(out, id.vars = 'time') out[, c(\"Component\", \"Patch\") := tstrsplit(variable, '_', fixed = TRUE)] out[, variable := NULL]  ggplot(data = out, mapping = aes(x = time, y = value, color = Patch)) +   geom_line() +   theme_bw()"},{"path":"https://dd-harp.github.io/exDE/articles/ex_534.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"5-3-4 Example","text":"show setup, solve, analyze models mosquito-borne pathogen transmission dynamics control using modular software. vignette designed explain modular notation constructing model five aquatic habitats (\\(l=5\\)), three patches (\\(p=3\\)), four human population strata (\\(n=4\\)). call 5-3-4.","code":""},{"path":"https://dd-harp.github.io/exDE/articles/ex_534.html","id":"diagram","dir":"Articles","previous_headings":"Introduction","what":"Diagram","title":"5-3-4 Example","text":"model 5-3-4 designed illustrate important features framework notation. assume : first three habitats found patch 1; last two patch 2; patch 3 habitats. patch 1 residents; patches 2 3 occupied, two different population strata; Transmission among patches modeled using concept time spent, similar visitation rates used models. strata residency (.e; patch spend time ), stratum allocates time across habitats.","code":""},{"path":"https://dd-harp.github.io/exDE/articles/ex_534.html","id":"parameters","dir":"Articles","previous_headings":"","what":"Parameters","title":"5-3-4 Example","text":"already know three important parameters, \\(l\\), \\(p\\) \\(n\\) determined early stages model building. exDE package expects parameters contained list object, containing nHabitats, nPatches, nStrata correspond l, p n.","code":"params <- list(   nHabitats = 5,   nPatches = 3,   nStrata = 4 ) params <- list2env(params)"},{"path":"https://dd-harp.github.io/exDE/articles/ex_534.html","id":"aquatic-habitat-membership-matrix","dir":"Articles","previous_headings":"Parameters","what":"Aquatic Habitat Membership Matrix","title":"5-3-4 Example","text":"aquatic habitat membership matrix \\(\\mathcal{N}\\) \\(p \\times l\\) matrix mapping aquatic habitats patches contain . attached directly parameters list. \\[\\begin{equation} {\\cal N} = \\left[   \\begin{array}{ccccc}   1 & 1 & 1 & 0 & 0  \\\\   0 & 0 & 0 & 1 & 1\\\\   0 & 0 & 0 & 0 & 0\\\\   \\end{array} \\right] \\end{equation}\\]","code":"calN <- matrix(   data = c(1,1,1,0,0,            0,0,0,1,1,            0,0,0,0,0),    nrow = params$nPatches, ncol = params$nHabitats, byrow = TRUE ) params$calN <- calN"},{"path":"https://dd-harp.github.io/exDE/articles/ex_534.html","id":"egg-dispersal-matrix","dir":"Articles","previous_headings":"Parameters","what":"Egg Dispersal Matrix","title":"5-3-4 Example","text":"egg dispersal matrix \\(\\mathcal{U}\\) \\(l \\times p\\) matrix describing eggs laid adult mosquitoes patch allocated among aquatic habitats patch. also attached directly parameters list. \\[\\begin{equation} {\\cal U} = \\left[   \\begin{array}{ccccc}   .7 & 0 & 0\\\\   .2 & 0 & 0\\\\   .1 & 0 & 0\\\\   0 & .8 & 0\\\\   0 & .2 & 0\\\\   \\end{array} \\right] \\end{equation}\\]","code":"xi <- matrix(c(.7, .2, .1, .8, .2), 5, 1)  params$calU <- t(calN %*% diag(as.vector(xi)))"},{"path":"https://dd-harp.github.io/exDE/articles/ex_534.html","id":"aquatic-mosquito-parameters","dir":"Articles","previous_headings":"Parameters","what":"Aquatic Mosquito Parameters","title":"5-3-4 Example","text":"simulation, use basic competition model larval dynamics (see ). requires specification three parameters, \\(\\psi\\) (maturation rates), \\(\\phi\\) (density-independent mortality rates), \\(\\theta\\) (density-dependent mortality terms), initial conditions. function exDE::make_parameters_L_basic basic checking input parameters returns list correct class method dispatch. returned list attached main parameter list name Lpar.","code":"L0 <- rep(1, params$nHabitats) psi <- rep(1/8, params$nHabitats) phi <- rep(1/8, params$nHabitats) theta <- c(1/10, 1/20, 1/40, 1/100, 1/10)   make_parameters_L_basic(pars = params, psi = psi, phi = phi, theta = theta, L0 = L0)"},{"path":"https://dd-harp.github.io/exDE/articles/ex_534.html","id":"adult-mosquito-parameters","dir":"Articles","previous_headings":"Parameters","what":"Adult Mosquito Parameters","title":"5-3-4 Example","text":"use ODE version generalized Ross-Macdonald model (see ). Part specification parameters includes construction mosquito dispersal matrix \\(\\mathcal{K}\\), mosquito demography matrix \\(\\Omega\\). Like aquatic parameters, use exDE::make_parameters_MYZ_RM_ode check parameter types return list correct class method dispatch. attach returned list main parameter list name MYZpar.","code":"g <- rep(1/12, params$nPatches)  sigma <- rep(1/12/2, params$nPatches)  calK <- t(matrix(   c(c(0, .6, .3),      c(.4, 0, .7),      c(.6, .4, 0)), 3, 3)) f <- rep(1/3, params$nPatches)  q <- rep(0.9, params$nPatches)  nu <- c(1/3,1/3,0)    eggsPerBatch <- 30  tau <- 12  M0 <- rep(100, params$nPatches) G0 <- rep(10, params$nPatches) Y0 <- rep(1, params$nPatches) Z0 <- rep(0, params$nPatches)  Omega <- make_Omega(g, sigma, calK, params$nPatches) Upsilon <- expm::expm(-Omega*tau)  make_parameters_MYZ_GeRM_ode(pars = params, g = g, sigma = sigma, calK = calK, tau = tau, f = f, q = q, nu = nu, eggsPerBatch = eggsPerBatch, M0 = M0, G0 = G0, Y0 = Y0, Z0 = Z0)"},{"path":[]},{"path":"https://dd-harp.github.io/exDE/articles/ex_534.html","id":"mixing","dir":"Articles","previous_headings":"Parameters","what":"Mixing","title":"5-3-4 Example","text":"Although directly used example, create residency membership matrix \\(\\mathcal{J}\\), \\(p \\times n\\) matrix indicating patch human population strata resides . \\[\\begin{equation} {\\cal J} = \\left[   \\begin{array}{cccc}   0 & 0 & 0 & 0 \\\\   1 & 1 & 0 & 0 \\\\   0 & 0 & 1 & 1 \\\\   \\end{array} \\right] \\end{equation}\\] create time risk matrix \\(\\Psi\\), \\(p \\times n\\) matrix describing human strata spends time across patches. \\[\\begin{equation} \\Psi = \\left[   \\begin{array}{cccc}   0.01 & .01 & .001 & .001 \\\\     0.95 & .92 & .04  & .02  \\\\     0.04 & .02 & .959 & .929 \\\\   \\end{array}   \\right] \\end{equation}\\] use basic SIS (Susceptible-Infected-Susceptible) model human component (see ). set like rest components, using exDE::make_parameters_X_SIS make correct return type, attached parameter list name Xpar.","code":"calJ <- t(matrix(   c(c(0,0,0,0),     c(1,1,0,0),     c(0,0,1,1)), 4, 3 )) Psi <- t(matrix(   c(c(0.01,0.01,0.001,0.001),     c(.95,.92,.04,.02),     c(.04,.02,.959,.929)), 4, 3 )) H <- matrix(c(10,90, 100, 900), 4, 1) X0 <- as.vector(0.2*H) r <- rep(1/200, params$nStrata) b <- rep(0.55, params$nStrata) c <- c(0.1, .02, .1, .02)  make_parameters_X_SIS(pars = params, b = b, c = c, r = r, Psi = Psi, X0 = X0, H = as.vector(H))"},{"path":[]},{"path":"https://dd-harp.github.io/exDE/articles/ex_534.html","id":"exogenous-forcing-and-vector-control","dir":"Articles","previous_headings":"Simulation","what":"Exogenous forcing and vector control","title":"5-3-4 Example","text":"need specify models exogenous forcing vector control. simply use null models (presence vector control exogenous forcing).","code":"make_parameters_exogenous_null(params) make_parameters_vc_null(params)"},{"path":"https://dd-harp.github.io/exDE/articles/ex_534.html","id":"initial-conditions","dir":"Articles","previous_headings":"Simulation","what":"Initial Conditions","title":"5-3-4 Example","text":"parameters 5-3-4 specified, can generate indices model attach parameter list. Now can set initial conditions model.","code":"make_indices(params) y <- rep(NaN, params$max_ix) y[params$L_ix] <- as.vector(L0) y[params$M_ix] <- as.vector(M0) y[params$G_ix] <- as.vector(G0) y[params$Y_ix] <- as.vector(Y0) y[params$Z_ix] <- as.vector(Z0) y[params$Upsilon_ix] <- as.vector(Upsilon) y[params$X_ix] <- as.vector(X0)"},{"path":"https://dd-harp.github.io/exDE/articles/ex_534.html","id":"numerical-solution","dir":"Articles","previous_headings":"Simulation","what":"Numerical Solution","title":"5-3-4 Example","text":"Now can pass vector initial conditions, y, parameter list params, function exDE::xDE_diffeqn differential equation solvers deSolve::ode generate numerical trajectory. classes Xpar, MYZpar, Lpar params ensure right methods invoked (dispatched) solve model.","code":"out <- deSolve::ode(y = y, times = 0:365, func = xDE_diffeqn, parms = params, method = \"lsoda\")"},{"path":"https://dd-harp.github.io/exDE/articles/ex_534.html","id":"plot-output","dir":"Articles","previous_headings":"Simulation","what":"Plot Output","title":"5-3-4 Example","text":"small amount data wrangling made easier data.table package, can plot output.","code":"colnames(out)[params$L_ix+1] <- paste0('L_', 1:params$nHabitats) colnames(out)[params$M_ix+1] <- paste0('M_', 1:params$nPatches) colnames(out)[params$G_ix+1] <- paste0('G_', 1:params$nPatches) colnames(out)[params$Y_ix+1] <- paste0('Y_', 1:params$nPatches) colnames(out)[params$Z_ix+1] <- paste0('Z_', 1:params$nPatches) colnames(out)[params$X_ix+1] <- paste0('X_', 1:params$nStrata) out <- out[, -c(params$Upsilon_ix+1)]  out <- as.data.table(out) out <- melt(out, id.vars = 'time') out[, c(\"Component\", \"Stratification\") := tstrsplit(variable, '_', fixed = TRUE)] out[, variable := NULL]  ggplot(data = out, mapping = aes(x = time, y = value, color = Stratification)) +   geom_line() +   facet_wrap(. ~ Component, scales = 'free') +   theme_bw()"},{"path":"https://dd-harp.github.io/exDE/articles/human_hmoi.html","id":"differential-equations","dir":"Articles","previous_headings":"","what":"Differential Equations","title":"Hybrid MoI (Multiplicity of Infection) Human Model","text":"equations follows: \\[ \\dot{m_{1}} = h - r_{1}m_{1} \\] \\[ \\dot{m_{2}} = h - r_{2}m_{2} \\] \\(h = b EIR\\), force infection. Prevalence can calculated MoI values : \\[ x_{1} = 1-e^{-m_{1}} \\] \\[ x_{2} = 1-e^{-m_{2}} \\] net infectious probability mosquitoes therefore given : \\[ x = c_{2}x_{2} + c_{1}(x_{1}-x_{2}) \\] \\(c_{1}\\) infectiousness inapparent infections, \\(c_{2}\\) infectiousness patent infections.","code":""},{"path":"https://dd-harp.github.io/exDE/articles/human_hmoi.html","id":"equilibrium-solutions","dir":"Articles","previous_headings":"","what":"Equilibrium solutions","title":"Hybrid MoI (Multiplicity of Infection) Human Model","text":"One way proceed assume \\(m_{2}\\) known, models MoI patent (observable) infections. : \\[ h = r_{2}/m_{2} \\] \\[ m_{1} = h/r_{1} \\] can use calculate net infectious probability, \\(\\kappa = x \\cdot H\\), allowing equilibrium solutions model feed components.","code":""},{"path":"https://dd-harp.github.io/exDE/articles/human_hmoi.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Hybrid MoI (Multiplicity of Infection) Human Model","text":"run simple example 3 population strata equilibrium. use exDE::make_parameters_X_hMoI set parameters. Please note runs human population component users read fully worked example run full simulation.","code":"library(exDE) library(deSolve) library(data.table) library(ggplot2) nStrata <- 3 H <- c(100, 500, 250) b <- 0.55 c1 <- 0.05 c2 <- 0.25 r1 <- 1/250 r2 <- 1/50 Psi <- matrix(data = 1,nrow = 1, ncol = nStrata)  m20 <- 1.5 h <- r2*m20 m10 <- h/r1  EIR <- h/b  params <- list(   nStrata = nStrata ) params <- list2env(params)  make_parameters_X_hMoI(pars = params, b = b, c1 = c1, c2 = c2, r1 = r1, r2 = r2, Psi = Psi, m10 = m10, m20 = m20, H = H) make_indices(params)  y0 <- rep(0, params$max_ix) y0[params$m1_ix] <- m10 y0[params$m2_ix] <- m20  out <- deSolve::ode(y = y0, times = c(0, 365), func = function(t, y, pars, EIR) {   list(dXdt(t, y, pars, EIR)) }, parms = params, method = 'lsoda', EIR = as.vector(EIR))  colnames(out)[params$m1_ix+1] <- paste0('m1_', 1:params$nStrata) colnames(out)[params$m2_ix+1] <- paste0('m2_', 1:params$nStrata)  out <- as.data.table(out) out <- melt(out, id.vars = 'time') out[, c(\"Component\", \"Strata\") := tstrsplit(variable, '_', fixed = TRUE)] out[, variable := NULL]  ggplot(data = out, mapping = aes(x = time, y = value, color = Strata)) +   geom_line() +   facet_wrap(Strata ~ Component, scales = 'free') +   theme_bw()"},{"path":"https://dd-harp.github.io/exDE/articles/human_sip.html","id":"differential-equations","dir":"Articles","previous_headings":"","what":"Differential Equations","title":"SIP (Susceptible-Infected-Prophylaxis) Human Model","text":"equations follows: \\[ \\dot{X} = \\mbox{diag}((1-\\rho)bEIR)\\cdot (H-X-P) - rX \\] \\[ \\dot{P} = \\mbox{diag}(\\rho b EIR) \\cdot (H-X-P) - \\eta P \\]","code":""},{"path":"https://dd-harp.github.io/exDE/articles/human_sip.html","id":"equilibrium-solutions","dir":"Articles","previous_headings":"","what":"Equilibrium solutions","title":"SIP (Susceptible-Infected-Prophylaxis) Human Model","text":", assume \\(H\\) \\(X\\) known. solve \\(EIR\\) \\(P\\). \\[ P = \\mbox{diag}(1/\\eta) \\cdot \\mbox{diag}(\\rho/(1-\\rho)) \\cdot rX \\] \\[ EIR = \\mbox{diag}(1/b) \\cdot \\mbox{diag}(1/(1-\\rho)) \\cdot \\left( \\frac{rX}{H-X-P} \\right) \\] Given \\(EIR\\) can solve mosquito population given rise equilibrium values.","code":""},{"path":"https://dd-harp.github.io/exDE/articles/human_sip.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"SIP (Susceptible-Infected-Prophylaxis) Human Model","text":"run simple example 3 population strata equilibrium. use exDE::make_parameters_X_SIP set parameters. Please note runs human population component users read fully worked example run full simulation.","code":"library(exDE) library(deSolve) library(data.table) library(ggplot2) nStrata <- 3 H <- c(100, 500, 250) X <- c(20, 120, 80) b <- 0.55 c <- 0.15 r <- 1/200 eta <- c(1/30, 1/40, 1/35) rho <- c(0.05, 0.1, 0.15) Psi <- matrix(data = 1,nrow = 1, ncol = nStrata)  P <- diag(1/eta) %*% diag(rho/(1-rho)) %*% (r*X) EIR <- diag(1/b, nStrata) %*% diag(1/(1-rho)) %*% ((r*X)/(H-X-P))  params <- list(   nStrata = nStrata ) params <- list2env(params)  make_parameters_X_SIP(pars = params, b = b, c = c, r = r, rho = rho, eta = eta, Psi = Psi, X0 = X, P0 = as.vector(P), H = H) make_indices(params)  y0 <- rep(0, params$max_ix) y0[params$X_ix] <- X y0[params$P_ix] <- P  out <- deSolve::ode(y = y0, times = c(0, 365), func = function(t, y, pars, EIR) {   list(dXdt(t, y, pars, EIR)) }, parms = params, method = 'lsoda', EIR = as.vector(EIR))  colnames(out)[params$X_ix+1] <- paste0('X_', 1:params$nStrata) colnames(out)[params$P_ix+1] <- paste0('P_', 1:params$nStrata)  out <- as.data.table(out) out <- melt(out, id.vars = 'time') out[, c(\"Component\", \"Strata\") := tstrsplit(variable, '_', fixed = TRUE)] out[, variable := NULL]  ggplot(data = out, mapping = aes(x = time, y = value, color = Strata)) +   geom_line() +   facet_wrap(. ~ Component, scales = 'free') +   theme_bw()"},{"path":"https://dd-harp.github.io/exDE/articles/human_sis.html","id":"differential-equations","dir":"Articles","previous_headings":"","what":"Differential Equations","title":"SIS (Susceptible-Infected-Susceptible) Human Model","text":"Let generalized SIS human model : \\[ \\dot{X} = \\mbox{diag}(bEIR) \\cdot (H-X) - rX \\]","code":""},{"path":"https://dd-harp.github.io/exDE/articles/human_sis.html","id":"equilibrium-solutions","dir":"Articles","previous_headings":"","what":"Equilibrium Solutions","title":"SIS (Susceptible-Infected-Susceptible) Human Model","text":"typical situation using model \\(H\\) (total population size strata) \\(X\\) (number infectious persons strata) known census survey data. interest find value \\(EIR\\) (Entomological Inoculation Rate) leads prevalence equilibrium. \\[ 0 = \\mbox{diag}(bEIR) \\cdot (H-X) - rX \\] \\[ rX = \\mbox{diag}(b) \\cdot \\mbox{diag}(EIR) \\cdot (H-X) \\] \\[ \\frac{rX}{H-X} = \\mbox{diag}(b) \\cdot \\mbox{diag}(EIR) \\] \\[ \\mbox{diag}(1/b) \\cdot \\left(\\frac{rX}{H-X}\\right) = EIR \\] Note final line, \\(EIR\\) column vector dimension \\(n\\) due operations left. element gives per-capita rate individuals population strata receive potentially infectious bites (summing across places visit).","code":""},{"path":"https://dd-harp.github.io/exDE/articles/human_sis.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"SIS (Susceptible-Infected-Susceptible) Human Model","text":"run simple example 3 population strata equilibrium. use exDE::make_parameters_X_SIS set parameters. Please note runs human population component users read fully worked example run full simulation.","code":"library(exDE) library(deSolve) library(data.table) library(ggplot2) nStrata <- 3 H <- c(100, 500, 250) X <- c(20, 120, 80) b <- 0.55 c <- 0.15 r <- 1/200 Psi <- matrix(data = 1,nrow = 1, ncol = nStrata)  EIR <- diag(1/b, nStrata) %*% ((r*X)/(H-X))  params <- list(   nStrata = nStrata ) params <- list2env(params)  make_parameters_X_SIS(pars = params, b = b, c = c, r = r, Psi = Psi, X0 = X, H = H) make_indices(params)  y0 <- rep(0, params$max_ix) y0[params$X_ix] <- X  out <- deSolve::ode(y = y0, times = c(0, 365), func = function(t, y, pars, EIR) {   list(dXdt(t, y, pars, EIR)) }, parms = params, method = 'lsoda', EIR = as.vector(EIR))  colnames(out)[params$X_ix+1] <- paste0('X_', 1:params$nStrata)  out <- as.data.table(out) out <- melt(out, id.vars = 'time') out[, c(\"Component\", \"Strata\") := tstrsplit(variable, '_', fixed = TRUE)] out[, variable := NULL]  ggplot(data = out, mapping = aes(x = time, y = value, color = Strata)) +   geom_line() +   theme_bw()"},{"path":"https://dd-harp.github.io/exDE/articles/spat_metric.html","id":"human-movement","dir":"Articles","previous_headings":"","what":"Human Movement","title":"Spatial Metrics","text":"start fundamental matrix \\(\\Psi\\) dimension \\(p\\times n\\) , column \\(\\) gives distribution time risk strata places (rows). strata considered potentially risk 100% time, columns sum one, convention adopt document. \\(\\Psi_{ji}\\) fraction time strata \\(\\) spends patch \\(j\\).","code":""},{"path":"https://dd-harp.github.io/exDE/articles/spat_metric.html","id":"ambient-human-population","dir":"Articles","previous_headings":"","what":"Ambient Human Population","title":"Spatial Metrics","text":"Let \\(H\\) length \\(n\\) column vector giving population size strata. Let \\(w_{f}\\) length \\(n\\) column vector giving biting weights strata (null value \\(1\\)). want know \\(W\\), length \\(p\\) column vector tells us many people patch (summing strata ). \\[ W =\\begin{bmatrix} \\sum_{} \\Psi_{1i}w_{f1}H_{} \\\\ \\vdots \\\\ \\sum_{} \\Psi_{pi}w_{fi}H_{} \\end{bmatrix} = \\Psi \\cdot w_{f} H \\] element \\(W\\) gives total weighted person-time spent strata location.","code":""},{"path":"https://dd-harp.github.io/exDE/articles/spat_metric.html","id":"biting-distribution-matrix","dir":"Articles","previous_headings":"","what":"Biting Distribution Matrix","title":"Spatial Metrics","text":"biting distribution matrix \\(\\beta\\) \\(n \\times p\\) matrix central formulating mathematically consistent models bloodfeeding, , extension, consistent models mosquito-borne pathogen transmission. given mathematically : \\[ \\beta = \\mbox{diag}(w_{f}) \\cdot \\Psi^{\\top} \\cdot \\mbox{diag}(1/W) \\] can written component-wise : \\[ \\beta = \\begin{bmatrix} \\frac{\\Psi_{11}w_{f1}}{\\sum_{}\\Psi_{1i}w_{fi}H_{}} & \\cdots & \\frac{\\Psi_{p1}w_{f1}}{\\sum_{}\\Psi_{pi}w_{fi}H_{}} \\\\ \\vdots & & \\vdots \\\\ \\frac{\\Psi_{1n}w_{fn}}{\\sum_{}\\Psi_{1i}w_{fi}H_{}} & \\cdots & \\frac{\\Psi_{pn}w_{fn}}{\\sum_{}\\Psi_{pi}w_{fi}H_{}} \\end{bmatrix} \\] Now can get clearer impression \\(\\beta_{ij}\\) . probability bite mosquitoes patch \\(j\\) lands particular person strata \\(\\). Another way say proportion person-time spent single person strata \\(\\) patch \\(j\\), person-time spent patch. wanted look matrix whose columns sum unity elements give probability bite taken ambient population patch \\(j\\) land strata \\(\\), look following matrix: \\[ \\mbox{diag}(H) \\cdot \\beta \\] operation effect multiplying column \\(\\beta\\) diagonal matrix left, columns sum one (column sums \\(\\Psi\\), case total time risk \\(< 1\\)). Likewise want recover \\(\\Psi^{\\top}\\), \\(n \\times p\\) matrix whose rows describe strata distributes time across patches, one can simply multiply right \\(\\mbox{diag}(W)\\) effect multiplying column \\(\\beta\\) element diagonal \\(\\mbox{diag}(W)\\). \\[ \\beta \\cdot \\mbox{diag}(W) \\]","code":""},{"path":"https://dd-harp.github.io/exDE/articles/spat_metric.html","id":"human-transmitting-capacity-htc","dir":"Articles","previous_headings":"","what":"Human transmitting capacity (HTC)","title":"Spatial Metrics","text":"Human transmitting capacity vector \\(D\\) length \\(n\\), element gives number net infectious days infected individual strata. homogeneous SIS model, simply: \\[ D = \\frac{c}{r} \\]","code":""},{"path":"https://dd-harp.github.io/exDE/articles/spat_metric.html","id":"parasite-dispersal-by-mosquitoes","dir":"Articles","previous_headings":"","what":"Parasite dispersal by mosquitoes","title":"Spatial Metrics","text":"parasite dispersal mosquitoes matrix, \\(\\mathcal{V}\\) spatial analogue vectorial capacity, expected number humans infected per infected human, per day, assuming perfect transmission efficiency. \\[ \\mathcal{V} = fq\\Omega^{-1} \\cdot e^{-\\Omega\\tau} \\cdot \\mbox{diag}\\left(\\frac{fqM}{W}\\right) \\] can understood going right left. matrix \\(\\mbox{diag}\\left(\\frac{fqM}{W}\\right)\\) \\(p\\times p\\) matrix, diagonal giving numbers bloodmeals taken person patch, per day. Multiplying left \\(e^{-\\Omega\\tau}\\) effect multiplying column matrix left corresponding element diagonal matrix right. intermediate matrix columns describe bites/person patch distributed across patches extrinsic incubation period, accounting mortality period. final multiplication left distributes bites EIP passed. single patch, formula becomes: \\[ \\frac{fq}{g} e^{-g\\tau}fq\\frac{M}{H} \\] equivalent (substituting \\(H=W\\)) classic formula Smith McKenzie (2004): \\(\\frac{fq}{g}e^{-g\\tau}fq\\frac{M}{H}\\).","code":""},{"path":"https://dd-harp.github.io/exDE/articles/spat_metric.html","id":"parasite-dispersal-by-humans","dir":"Articles","previous_headings":"","what":"Parasite dispersal by humans","title":"Spatial Metrics","text":"\\[ \\mathcal{D} = \\mbox{diag}\\left(W \\right) \\cdot \\beta^T \\cdot \\mbox{diag}\\left(bDH\\right) \\cdot \\beta \\] can first examine multiplication \\(\\mbox{diag}\\left(bDH\\right) \\cdot \\beta\\) right. effect multiplying column \\(\\beta\\) diagonal \\(\\mbox{diag}\\left(bDH\\right)\\). results \\(n\\times p\\) matrix whose columns give distribution potentially transmitting person-time (\\(\\frac{bc}{r}\\)) person strata contributes patch. \\(p\\times p\\) matrix. left \\(\\mbox{diag}\\left(W \\right) \\cdot \\beta^T\\) multiplies column \\(\\beta^T\\) diagonal matrix; effect recovering original movement matrix \\(\\Psi\\). multiplying intermediate matrix produced preceding section left distributes potentially-transmitting person time across patches. Therefore \\(\\)-th column \\(\\mathcal{D}\\) describes potentially infectious person-time person infected \\(\\) distributed across patches. 1 patch, 1 strata case, simplifies considerably : \\[ \\mathcal{D} = \\frac{bc}{r} \\]","code":""},{"path":"https://dd-harp.github.io/exDE/articles/spat_metric.html","id":"parasite-dispersal-through-one-parasite-generation","dir":"Articles","previous_headings":"","what":"Parasite Dispersal through one Parasite Generation","title":"Spatial Metrics","text":"One way look parasite dispersal look parasites dispersed one parasite generation. can done mosquito mosquito, human human. show equation parasite dispersal generation, beginning ending human host. \\[ \\mathcal{R} =   b \\beta \\cdot {\\cal V}  \\cdot \\mbox{diag}\\left(W \\right) \\cdot \\beta^T  \\cdot \\mbox{diag}\\left(DH\\right) \\] \\(\\mathcal{R}\\) \\(n\\times n\\) matrix, columns describe infections starting strata disseminated among strata one generation. can learn interpret equation walking left right. \\(\\mbox{diag}\\left(W \\right) \\cdot \\beta^T \\cdot \\mbox{diag}\\left(DH\\right)\\) produces \\(p\\times n\\) matrix describes infectious person-time strata spread across patches. Multiplication \\(\\mathcal{V}\\) describes infectious person-time transformed potentially infectious bites mosquitoes, distributed space accounting mortality EIP. Final multiplication \\(\\beta\\) \\(b\\) takes account persons contact infectious bites, transmission efficiency back human hosts. , can take 1 patch, 1 strata case see formula simplifies: \\[ \\frac{bc}{r} \\cdot \\frac{fq}{g} e^{-g\\tau}fq\\frac{M}{H} \\] precisely formula \\(R_{0}\\) Smith McKenzie (2004). Therefore \\(\\mathcal{R}\\) “logical” spatial version threshold metric. track parasite dispersal mosquitoes mosquitoes arrive \\(p\\times p\\) matrix: \\[ \\mathcal{Z} = e^{-\\Omega\\tau} \\cdot \\mbox{diag}\\left( \\frac{fq M}{W} \\right) \\cdot {\\cal D} \\cdot  fq\\Omega^{-1} \\] 1 patch 1 strata case becomes equation \\(\\mathcal{R}\\).","code":""},{"path":"https://dd-harp.github.io/exDE/articles/spat_metric.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Spatial Metrics","text":"demonstrate calculate metrics using 5-3-4 example.","code":"library(exDE) l <- 5 p <- 3 n <- 4  calN <- matrix(   data = c(1,1,1,0,0,            0,0,0,1,1,            0,0,0,0,0),    nrow = p, ncol = l, byrow = TRUE )   xi <- matrix(c(.7, .2, .1, .8, .2), 5, 1)  calU <- t(calN %*% diag(as.vector(xi)))  g <- rep(1/12, p)  sigma <- rep(1/12/2, p)  calK <- t(matrix(   c(c(0, .6, .3),      c(.4, 0, .7),      c(.6, .4, 0)), 3, 3)) f <- rep(1/3, p)  q <- rep(0.9, p)  tau <- 12  M <- rep(100, p)  Omega <- diag(g) + (diag(1,p)-calK) %*% diag(sigma) Lambda <- Omega %*% M  H <- matrix(c(10,90, 100, 900), 4, 1) X <- as.vector(0.2*H) r <- rep(1/200, n) b <- rep(0.55, n) c <- c(0.1, .02, .1, .02)  calJ <- t(matrix(   c(c(0,0,0,0),     c(1,1,0,0),     c(0,0,1,1)), n, p ))  Theta <- t(matrix(   c(c(0.01,0.01,0.001,0.001),     c(.95,.92,.04,.02),     c(.04,.02,.959,.929)), n, p ))  W <- Theta %*% H beta <- t(Theta) %*% diag_inverse(W)  D <- c/r  calV <- metric_calV(f = f, q = q, Omega = Omega, tau = tau, M = M, W = W) calD <- metric_calD(W = W, beta = beta, b = b, D = D, H = H) calR <- metric_calR(b = b, beta = beta, calV = calV, W = W, D = D, H = H) calZ <- metric_calZ(Omega = Omega, tau = tau, f = f, q = q, M = M, W = W, calD = calD)"},{"path":"https://dd-harp.github.io/exDE/articles/vc_lemenach.html","id":"parameters","dir":"Articles","previous_headings":"","what":"Parameters","title":"ITN-based Vector Control","text":"case study use simple model 3 patches, 3 population strata, 3 aquatic habitats. usual, set parameter values compute values state variables equilibrium. part equilibrium calculation must compute \\(\\Upsilon(0) = \\exp\\left(-\\int_{-\\tau}^{0} \\Omega(s) ds \\right)\\); value integrated mosquito demography matrix initial time point. simplify things, simply assume conditions constant prior \\(t=0\\) \\(\\Upsilon(0) = e^{-\\Omega\\tau}\\).","code":"pars <- new.env() pars$nPatches <- 3 pars$nStrata <- 3 pars$nHabitats <- 3  # human parameters b <- 0.55 c <- 0.15 r <- 1/200 wf <- rep(1, pars$nStrata)  pfpr <- runif(n = pars$nStrata, min = 0.25, max = 0.35) H <- rpois(n = pars$nStrata, lambda = 1000) X <- rbinom(n = pars$nStrata, size = H, prob = pfpr)  Psi <- matrix(   data = c(     0.9, 0.05, 0.05,     0.05, 0.9, 0.05,     0.05, 0.05, 0.9   ), nrow = pars$nStrata, ncol = pars$nPatches, byrow = T ) Psi <- t(Psi)  # adult mosquito parameters f <- 0.3 q <- 0.9 g <- 1/10 sigma <- 1/100 nu <- 1/2 eggsPerBatch <- 30 tau <- 11  # mosquito movement calK calK <- matrix(0, pars$nPatches, pars$nPatches) calK[upper.tri(calK)] <- 1/(pars$nPatches-1) calK[lower.tri(calK)] <- 1/(pars$nPatches-1) calK <- calK/rowSums(calK) calK <- t(calK)  Omega <- make_Omega(g = g, sigma = sigma, K = calK, nPatches = pars$nPatches) Omega_inv <- solve(Omega) Upsilon <- expm::expm(-Omega * tau) Upsilon_inv <- expm::expm(Omega * tau)"},{"path":"https://dd-harp.github.io/exDE/articles/vc_lemenach.html","id":"equilibrium","dir":"Articles","previous_headings":"","what":"Equilibrium","title":"ITN-based Vector Control","text":"Now compute equilibrium conditions adult mosquitoes human populations, PfPR human population maintained input levels conditions unchanging. Given equilibrium value \\(\\Lambda\\) required sustain mosquito populations level sufficient maintain transmission level PfPR, well values \\(\\psi\\) (maturation rate) \\(\\phi\\) (density independent mortality), compute equilibrium values \\(L\\) (aquatic mosquito density) \\(\\theta\\) (density dependent mortality).","code":"# derived EIR to sustain equilibrium pfpr EIR <- diag(1/b, pars$nStrata) %*% ((r*X) / (H - X))  # ambient pop W <- Psi %*% H  # biting distribution matrix beta <- diag(wf) %*% t(Psi) %*% diag(1/as.vector(W), pars$nPatches)  # kappa kappa <- t(beta) %*% (X*c)  # equilibrium solutions Z <- diag(1/(f*q), pars$nPatches) %*% ginv(beta) %*% EIR MY <- diag(1/as.vector(f*q*kappa), pars$nPatches) %*% Upsilon_inv %*% Omega %*% Z Y <- Omega_inv %*% (diag(as.vector(f*q*kappa), pars$nPatches) %*% MY) M <- MY + Y G <- solve(diag(nu+f, pars$nPatches) + Omega) %*% diag(f, pars$nPatches) %*% M Lambda <- Omega %*% M # aquatic habitat membership matrix (assume 1 habitat per patch) calN <- matrix(0, pars$nPatches, pars$nHabitats) diag(calN) <- 1  # egg dispersal matrix (assume 1 habitat per patch) calU <- matrix(0, pars$nHabitats, pars$nPatches) diag(calU) <- 1  alpha <- as.vector(solve(calN) %*% Lambda)  psi <- 1/10 phi <- 1/12 eta <- as.vector(calU %*% G * nu * eggsPerBatch)  L <- alpha/psi theta <- (eta - psi*L - phi*L)/(L^2)"},{"path":"https://dd-harp.github.io/exDE/articles/vc_lemenach.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"ITN-based Vector Control","text":"Now state variables solved equilibrium, can set parameters components system. also need set time-varying function compute coverage ITNs time point. use sine curve period 365 days goes 0 1 period, phase shifted 0 returns 0. function also returns 0 \\(t<0\\). must function takes single argument t (time) returns scalar value.","code":"pars$calU <- calU pars$calN <- calN  # ITN coverage ITN_cov <- function(t) {ifelse(t < 0, 0, (sin(2*pi*(t-365/4) / 365) + 1) / 2)}  # set parameters make_parameters_exogenous_null(pars) make_parameters_vc_lemenach(pars, phi = ITN_cov) make_parameters_MYZ_GeRM_dde(pars = pars, g = g, sigma = sigma, calK = calK, f = f, q = q, nu = nu, eggsPerBatch = eggsPerBatch, tau = tau, M0 = M, G0 = G, Y0 = Y, Z0 = Z) make_parameters_L_basic(pars = pars, psi = psi, phi = phi, theta = theta, L0 = L) make_parameters_X_SIS(pars = pars, b = b, c = c, r = r, Psi = Psi, wf = wf, X0 = X, H = H) make_indices(pars = pars)"},{"path":"https://dd-harp.github.io/exDE/articles/vc_lemenach.html","id":"solve","dir":"Articles","previous_headings":"","what":"Solve","title":"ITN-based Vector Control","text":"setting parameters must set initial conditions model. ’re ready solve model! integrate 5 year interval, show effects “seasonal” ITN coverage. can plot output study effects seasonal ITN coverage state variables. see total parous mosquito densities \\(M\\) \\(G\\) now vary sinusoidal manner coverage changes, \\(L\\), larval density, number ovipositing mosquitoes changes. addition increasing mosquito mortality, ITNs also decrease feeding rate proportion bloodmeals taken humans due repellency effect, see densities infected infectious mosquitoes (\\(Y\\) \\(Z\\)) steadily decrease time longer sufficient bloodmeals taken sustain prevalence. similar pattern appears human prevalence \\(X\\), slower dynamics due slow recovery rate untreated infection.","code":"# ICs y <- rep(NaN, pars$max_ix) y[pars$L_ix] <- pars$Lpar$L0 y[pars$X_ix] <- pars$Xpar$X0 y[pars$M_ix] <- pars$MYZpar$M0 y[pars$G_ix] <- pars$MYZpar$G0 y[pars$Y_ix] <- pars$MYZpar$Y0 y[pars$Z_ix] <- pars$MYZpar$Z0 y[pars$Upsilon_ix] <- as.vector(Upsilon)  # solve the model out <- dede(y = y, times = 0:(365*5), func = xDE_diffeqn, parms = pars) colnames(out)[pars$L_ix+1] <- paste0('L_', 1:pars$nHabitats) colnames(out)[pars$M_ix+1] <- paste0('M_', 1:pars$nPatches) colnames(out)[pars$G_ix+1] <- paste0('G_', 1:pars$nPatches) colnames(out)[pars$Y_ix+1] <- paste0('Y_', 1:pars$nPatches) colnames(out)[pars$Z_ix+1] <- paste0('Z_', 1:pars$nPatches) colnames(out)[pars$X_ix+1] <- paste0('X_', 1:pars$nStrata) out <- out[, -c(pars$Upsilon_ix+1)]  out <- as.data.table(out) out <- melt(out, id.vars = 'time') out[, c(\"Component\", \"Stratification\") := tstrsplit(variable, '_', fixed = TRUE)] out[, variable := NULL]  ggplot(data = out, mapping = aes(x = time, y = value, color = Stratification)) +   geom_line() +   facet_wrap(. ~ Component, scales = 'free') +   theme_bw()"},{"path":"https://dd-harp.github.io/exDE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sean L. Wu. Author, maintainer. David L. Smith. Author.","code":""},{"path":"https://dd-harp.github.io/exDE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wu S, Henry J, Citron D, Ssebuliba D, Nsumba J, Sánchez C. H, Brady O, Guerra C, García G, Carter , Ferguson H, Afolabi B, Hay S, Reiner R, Kiware S, Smith D (2022). “Spatial Dynamics Malaria Transmission.” medRxiv. doi:10.1101/2022.11.07.22282044, https://www.medrxiv.org/content/10.1101/2022.11.07.22282044v1.","code":"@Article{,   title = {Spatial Dynamics of Malaria Transmission},   author = {Sean L. Wu and John M. Henry and Daniel T. Citron and Doreen M. Ssebuliba and Juliet N. Nsumba and Héctor M. {Sánchez C.} and Oliver J. Brady and Carlos A. Guerra and Guillermo A. García and Austin R. Carter and Heather M. Ferguson and Bakare E. Afolabi and Simon I. Hay and Robert C. Reiner and Samson Kiware and David L. Smith},   journal = {medRxiv},   year = {2022},   publisher = {Cold Spring Harbor Laboratory Press},   url = {https://www.medrxiv.org/content/10.1101/2022.11.07.22282044v1},   doi = {10.1101/2022.11.07.22282044}, }"},{"path":[]},{"path":"https://dd-harp.github.io/exDE/index.html","id":"what-is-exde","dir":"","previous_headings":"","what":"What is exDE?","title":"Extensible Differential Equations for Mosquito-Borne Pathogen Modeling","text":"exDE provides tools set modular ordinary delay differential equation spatial models mosquito-borne pathogens, focusing malaria. Modularity achieved method dispatch parameter lists component used compute full set differential equations. function exDE::xDE_diffeqn computes gradient state variables modular components can used excellent solvers deSolve, differential equation solvers R. exDE can regarded continuous-time companion discrete stochastic Micro-MoB framework. get started, please consider reading articles drop panels , website. 3 sections ending “Component” describe particular models implementing interface components (adult mosquitoes, aquatic mosquitoes, humans), show simulation equilibrium values. section “Articles” -depth examples, including extended walk set run model vignette(\"ex_534\"), guide contribute, example running model exDE external forcing model ITN (insecticide treated nets) based vector control vignette(\"vc_lemenach\"). section “Functions” documents function exported package.","code":""},{"path":"https://dd-harp.github.io/exDE/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extensible Differential Equations for Mosquito-Borne Pathogen Modeling","text":"install latest version GitHub, run following lines code R session. Alternatively, can install directly CRAN (please aware version CRAN may latest version GitHub):","code":"library(devtools) devtools::install_github(\"dd-harp/exDE\") install.packages(\"exDE\")"},{"path":"https://dd-harp.github.io/exDE/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Extensible Differential Equations for Mosquito-Borne Pathogen Modeling","text":"information contribute development exDE, please read article contribute vignette(\"Contributing\")!","code":""},{"path":"https://dd-harp.github.io/exDE/index.html","id":"model-building-in-exde","dir":"","previous_headings":"","what":"Model building in exDE","title":"Extensible Differential Equations for Mosquito-Borne Pathogen Modeling","text":"Models mosquito borne pathogen transmission systems naturally modular, structured vector life stage, host population strata, spatial locations (patches) transmission occurs (see figure ).  Models exDE framework constructed 3 dynamical components: ℳ: adult mosquitoes, whose dynamics described dℳ/dt ℒ: aquatic (immature) mosquitoes, whose dynamics described dℒ/dt 𝒳: human population, whose dynamics described d𝒳/dt combined state 3 components entire state dynamical model, combined dynamics described differential equations represents full endogenous dynamics system. addition 2 components directly contribute state model, instead modify parameters compute intermediate quantities represent external influences system. : Exogenous forcing: weather, climate, unmodeled populations Vector control: public health mosquito control interventions affect dynamical components also functions handle exchange information (flows) dynamical components couple dynamics. Bloodfeeding process adult mosquitoes seek feed blood hosts, results quantities EIR (entomological inoculation rate) κ, net infectiousness humans mosquitoes, couple dynamics ℳ 𝒳. Likewise emergence new adults aquatic habitats egg laying adults habitats couples ℳ ℒ. function exDE::xDE_diffeqn compute necessary quantities returns vector derivatives state variables can used solve trajectories model exDE. program flow within function summarized diagram:  information, please read research article describing theory behind model.","code":""},{"path":"https://dd-harp.github.io/exDE/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Extensible Differential Equations for Mosquito-Borne Pathogen Modeling","text":"Version 1.0 software designed Sean L. Wu Professor David L. Smith. code written Sean L. Wu. anticipate active development exDE MicroMoB add new models fill important needs. idea developing modular software simulate dynamics control mosquito-borne pathogens originated sometime around 2009 Emerging Pathogens Institute, University Florida. took much longer anticipated finish. concepts appeared various publications. algorithms trace back software packages never launched, someday might yet completed (e.g., MASH). retrospect, key challenge blood feeding, one. inception, project supported grants Bill Melinda Gates Foundation, including (recently) Modeling Adaptive Malaria Control (INV 030600, PI = David L Smith, University Washington). software part RAMP (Robust Analytics Malaria Policy), core analytical methodology developed support adaptive malaria control. RAMP project includes RAMP-UW team University Washington based Seattle Washington, RAMP-Uganda team based Kampala, Uganda, provides analytics support National Malaria Control Division, Ministry Health, Uganda. model features inspired discussions mosquito working groups (led Professor Thomas Scott) RAPIDD (Research Policy Infectious Disease Dynamics). time, project benefited unwavering support inspiration late F. Ellis McKenzie, Fogarty International Center. Development exDE supported, part, grant US National Institute Allergies Infectious Diseases (NIAID) fund project Spatial Targeting Adaptive Vector Control Residual Transmission Malaria Elimination Urban African Settings (R01 AI163398, PI = David L Smith), supported collaboration Bioko Island Malaria Elimination Program. Development software benefited funding collaboration NIAID grant Program Resistance, Immunology, Surveillance & Modeling Malaria Uganda (PRISM) (2U19AI089674, PIs = Grant Dorsey, University California San Francisco; Moses Kamya, Infectious Diseases Research Collaboration), part International Centers Excellence Malaria Research (ICEMR) program. Funding develop models West Nile Virus support Harris County Public Health funded NSF part project, Computing Biome (PI= Janos Sztipanovits). project part Convergence Accelerator program National Science Foundation, Directorate Technology, Innovation, Partnerships (TIP) (NSF 2040688 NSF 2040688, PI=Janos Sztipanovits, Vanderbilt University).","code":""},{"path":"https://dd-harp.github.io/exDE/reference/ExogenousForcing.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify parameters due to exogenous forcing — ExogenousForcing","title":"Modify parameters due to exogenous forcing — ExogenousForcing","text":"method dispatches type pars$EXpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/ExogenousForcing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify parameters due to exogenous forcing — ExogenousForcing","text":"","code":"ExogenousForcing(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/ExogenousForcing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify parameters due to exogenous forcing — ExogenousForcing","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/ExogenousForcing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify parameters due to exogenous forcing — ExogenousForcing","text":"none","code":""},{"path":"https://dd-harp.github.io/exDE/reference/ExogenousForcing.null.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify parameters due to exogenous forcing — ExogenousForcing.null","title":"Modify parameters due to exogenous forcing — ExogenousForcing.null","text":"Implements ExogenousForcing null model exogenous forcing (nothing)","code":""},{"path":"https://dd-harp.github.io/exDE/reference/ExogenousForcing.null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify parameters due to exogenous forcing — ExogenousForcing.null","text":"","code":"# S3 method for null ExogenousForcing(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/ExogenousForcing.null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify parameters due to exogenous forcing — ExogenousForcing.null","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/ExogenousForcing.null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify parameters due to exogenous forcing — ExogenousForcing.null","text":"none","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_EIR.SIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Entomological inoculation rate on human strata — F_EIR.SIP","title":"Entomological inoculation rate on human strata — F_EIR.SIP","text":"Implements F_EIR SIP model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_EIR.SIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Entomological inoculation rate on human strata — F_EIR.SIP","text":"","code":"# S3 method for SIP F_EIR(t, y, pars, MosyBehavior)"},{"path":"https://dd-harp.github.io/exDE/reference/F_EIR.SIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Entomological inoculation rate on human strata — F_EIR.SIP","text":"t current simulation time y state vector pars environment MosyBehavior values returned MosquitoBehavior, potentially modified control VectorControl","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_EIR.SIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Entomological inoculation rate on human strata — F_EIR.SIP","text":"numeric vector length nStrata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_EIR.SIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Entomological inoculation rate on human strata — F_EIR.SIS","title":"Entomological inoculation rate on human strata — F_EIR.SIS","text":"Implements F_EIR SIS model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_EIR.SIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Entomological inoculation rate on human strata — F_EIR.SIS","text":"","code":"# S3 method for SIS F_EIR(t, y, pars, MosyBehavior)"},{"path":"https://dd-harp.github.io/exDE/reference/F_EIR.SIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Entomological inoculation rate on human strata — F_EIR.SIS","text":"t current simulation time y state vector pars environment MosyBehavior values returned MosquitoBehavior, potentially modified control VectorControl","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_EIR.SIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Entomological inoculation rate on human strata — F_EIR.SIS","text":"numeric vector length nStrata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_EIR.hMoI.html","id":null,"dir":"Reference","previous_headings":"","what":"Entomological inoculation rate on human strata — F_EIR.hMoI","title":"Entomological inoculation rate on human strata — F_EIR.hMoI","text":"Implements F_EIR hybrid MoI model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_EIR.hMoI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Entomological inoculation rate on human strata — F_EIR.hMoI","text":"","code":"# S3 method for hMoI F_EIR(t, y, pars, MosyBehavior)"},{"path":"https://dd-harp.github.io/exDE/reference/F_EIR.hMoI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Entomological inoculation rate on human strata — F_EIR.hMoI","text":"t current simulation time y state vector pars environment MosyBehavior values returned MosquitoBehavior, potentially modified control VectorControl","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_EIR.hMoI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Entomological inoculation rate on human strata — F_EIR.hMoI","text":"numeric vector length nStrata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_EIR.html","id":null,"dir":"Reference","previous_headings":"","what":"Entomological inoculation rate on human strata — F_EIR","title":"Entomological inoculation rate on human strata — F_EIR","text":"method dispatches type pars$Xpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_EIR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Entomological inoculation rate on human strata — F_EIR","text":"","code":"F_EIR(t, y, pars, MosyBehavior)"},{"path":"https://dd-harp.github.io/exDE/reference/F_EIR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Entomological inoculation rate on human strata — F_EIR","text":"t current simulation time y state vector pars environment MosyBehavior values returned MosquitoBehavior, potentially modified control VectorControl","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_EIR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Entomological inoculation rate on human strata — F_EIR","text":"numeric vector length nStrata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_Z.GeRM.html","id":null,"dir":"Reference","previous_headings":"","what":"Density of infectious mosquitoes — F_Z.GeRM","title":"Density of infectious mosquitoes — F_Z.GeRM","text":"Implements F_Z generalized GeRM model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_Z.GeRM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density of infectious mosquitoes — F_Z.GeRM","text":"","code":"# S3 method for GeRM F_Z(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_Z.GeRM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density of infectious mosquitoes — F_Z.GeRM","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_Z.GeRM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density of infectious mosquitoes — F_Z.GeRM","text":"numeric vector length nPatches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_Z.html","id":null,"dir":"Reference","previous_headings":"","what":"Density of infectious mosquitoes — F_Z","title":"Density of infectious mosquitoes — F_Z","text":"method dispatches type pars$MYZpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_Z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density of infectious mosquitoes — F_Z","text":"","code":"F_Z(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_Z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density of infectious mosquitoes — F_Z","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_Z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density of infectious mosquitoes — F_Z","text":"numeric vector length nPatches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_Z_lag.GeRM.html","id":null,"dir":"Reference","previous_headings":"","what":"Density of lagged infectious mosquitoes — F_Z_lag.GeRM","title":"Density of lagged infectious mosquitoes — F_Z_lag.GeRM","text":"Implements F_Z_lag generalized GeRM model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_Z_lag.GeRM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density of lagged infectious mosquitoes — F_Z_lag.GeRM","text":"","code":"# S3 method for GeRM F_Z_lag(t, y, pars, lag)"},{"path":"https://dd-harp.github.io/exDE/reference/F_Z_lag.GeRM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density of lagged infectious mosquitoes — F_Z_lag.GeRM","text":"t current simulation time y state vector pars environment lag duration lag t-lag","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_Z_lag.GeRM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density of lagged infectious mosquitoes — F_Z_lag.GeRM","text":"numeric vector length nPatches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_Z_lag.html","id":null,"dir":"Reference","previous_headings":"","what":"Density of lagged infectious mosquitoes — F_Z_lag","title":"Density of lagged infectious mosquitoes — F_Z_lag","text":"method dispatches type pars$MYZpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_Z_lag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density of lagged infectious mosquitoes — F_Z_lag","text":"","code":"F_Z_lag(t, y, pars, lag)"},{"path":"https://dd-harp.github.io/exDE/reference/F_Z_lag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density of lagged infectious mosquitoes — F_Z_lag","text":"t current simulation time y state vector pars environment lag duration lag t-lag","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_Z_lag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density of lagged infectious mosquitoes — F_Z_lag","text":"numeric vector length nPatches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_alpha.basic.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of newly emerging adults from each larval habitat — F_alpha.basic","title":"Number of newly emerging adults from each larval habitat — F_alpha.basic","text":"Implements F_alpha basic competition model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_alpha.basic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of newly emerging adults from each larval habitat — F_alpha.basic","text":"","code":"# S3 method for basic F_alpha(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_alpha.basic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of newly emerging adults from each larval habitat — F_alpha.basic","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_alpha.basic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of newly emerging adults from each larval habitat — F_alpha.basic","text":"numeric vector length nHabitats","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of newly emerging adults from each larval habitat — F_alpha","title":"Number of newly emerging adults from each larval habitat — F_alpha","text":"method dispatches type pars$Lpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of newly emerging adults from each larval habitat — F_alpha","text":"","code":"F_alpha(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of newly emerging adults from each larval habitat — F_alpha","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_alpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of newly emerging adults from each larval habitat — F_alpha","text":"numeric vector length nHabitats","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_alpha.trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of newly emerging adults from each larval habitat — F_alpha.trace","title":"Number of newly emerging adults from each larval habitat — F_alpha.trace","text":"Implements F_alpha trace (forced emergence) model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_alpha.trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of newly emerging adults from each larval habitat — F_alpha.trace","text":"","code":"# S3 method for trace F_alpha(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_alpha.trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of newly emerging adults from each larval habitat — F_alpha.trace","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_alpha.trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of newly emerging adults from each larval habitat — F_alpha.trace","text":"numeric vector length nHabitats","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta.SIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Biting distribution matrix — F_beta.SIP","title":"Biting distribution matrix — F_beta.SIP","text":"Implements F_beta SIP model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta.SIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biting distribution matrix — F_beta.SIP","text":"","code":"# S3 method for SIP F_beta(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_beta.SIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Biting distribution matrix — F_beta.SIP","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta.SIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Biting distribution matrix — F_beta.SIP","text":"matrix dimensions nStrata nPatches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta.SIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Biting distribution matrix — F_beta.SIS","title":"Biting distribution matrix — F_beta.SIS","text":"Implements F_beta SIS model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta.SIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biting distribution matrix — F_beta.SIS","text":"","code":"# S3 method for SIS F_beta(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_beta.SIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Biting distribution matrix — F_beta.SIS","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta.SIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Biting distribution matrix — F_beta.SIS","text":"matrix dimensions nStrata nPatches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta.hMoI.html","id":null,"dir":"Reference","previous_headings":"","what":"Biting distribution matrix — F_beta.hMoI","title":"Biting distribution matrix — F_beta.hMoI","text":"Implements F_beta hybrid MoI model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta.hMoI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biting distribution matrix — F_beta.hMoI","text":"","code":"# S3 method for hMoI F_beta(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_beta.hMoI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Biting distribution matrix — F_beta.hMoI","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta.hMoI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Biting distribution matrix — F_beta.hMoI","text":"matrix dimensions nStrata nPatches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"Biting distribution matrix — F_beta","title":"Biting distribution matrix — F_beta","text":"method dispatches type pars$Xpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biting distribution matrix — F_beta","text":"","code":"F_beta(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Biting distribution matrix — F_beta","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Biting distribution matrix — F_beta","text":"numeric vector length nStrata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta_lag.SIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Lagged biting distribution matrix — F_beta_lag.SIP","title":"Lagged biting distribution matrix — F_beta_lag.SIP","text":"Implements F_beta_lag SIP model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta_lag.SIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lagged biting distribution matrix — F_beta_lag.SIP","text":"","code":"# S3 method for SIP F_beta_lag(t, y, pars, lag)"},{"path":"https://dd-harp.github.io/exDE/reference/F_beta_lag.SIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lagged biting distribution matrix — F_beta_lag.SIP","text":"t current simulation time y state vector pars environment lag duration lag t-lag","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta_lag.SIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lagged biting distribution matrix — F_beta_lag.SIP","text":"matrix dimensions nStrata nPatches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta_lag.SIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Lagged biting distribution matrix — F_beta_lag.SIS","title":"Lagged biting distribution matrix — F_beta_lag.SIS","text":"Implements F_beta_lag SIS model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta_lag.SIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lagged biting distribution matrix — F_beta_lag.SIS","text":"","code":"# S3 method for SIS F_beta_lag(t, y, pars, lag)"},{"path":"https://dd-harp.github.io/exDE/reference/F_beta_lag.SIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lagged biting distribution matrix — F_beta_lag.SIS","text":"t current simulation time y state vector pars environment lag duration lag t-lag","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta_lag.SIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lagged biting distribution matrix — F_beta_lag.SIS","text":"matrix dimensions nStrata nPatches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta_lag.hMoI.html","id":null,"dir":"Reference","previous_headings":"","what":"Lagged biting distribution matrix — F_beta_lag.hMoI","title":"Lagged biting distribution matrix — F_beta_lag.hMoI","text":"Implements F_beta_lag hybrid MoI model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta_lag.hMoI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lagged biting distribution matrix — F_beta_lag.hMoI","text":"","code":"# S3 method for hMoI F_beta_lag(t, y, pars, lag)"},{"path":"https://dd-harp.github.io/exDE/reference/F_beta_lag.hMoI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lagged biting distribution matrix — F_beta_lag.hMoI","text":"t current simulation time y state vector pars environment lag duration lag t-lag","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta_lag.hMoI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lagged biting distribution matrix — F_beta_lag.hMoI","text":"matrix dimensions nStrata nPatches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta_lag.html","id":null,"dir":"Reference","previous_headings":"","what":"Lagged biting distribution matrix — F_beta_lag","title":"Lagged biting distribution matrix — F_beta_lag","text":"method dispatches type pars$Xpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta_lag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lagged biting distribution matrix — F_beta_lag","text":"","code":"F_beta_lag(t, y, pars, lag)"},{"path":"https://dd-harp.github.io/exDE/reference/F_beta_lag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lagged biting distribution matrix — F_beta_lag","text":"t current simulation time y state vector pars environment lag duration lag t-lag","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_beta_lag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lagged biting distribution matrix — F_beta_lag","text":"numeric vector length nStrata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_eggs.GeRM.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of eggs laid by adult mosquitoes — F_eggs.GeRM","title":"Number of eggs laid by adult mosquitoes — F_eggs.GeRM","text":"Implements F_eggs generalized GeRM model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_eggs.GeRM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of eggs laid by adult mosquitoes — F_eggs.GeRM","text":"","code":"# S3 method for GeRM F_eggs(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_eggs.GeRM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of eggs laid by adult mosquitoes — F_eggs.GeRM","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_eggs.GeRM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of eggs laid by adult mosquitoes — F_eggs.GeRM","text":"numeric vector length nPatches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_eggs.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of eggs laid by adult mosquitoes — F_eggs","title":"Number of eggs laid by adult mosquitoes — F_eggs","text":"method dispatches type pars$MYZpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_eggs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of eggs laid by adult mosquitoes — F_eggs","text":"","code":"F_eggs(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_eggs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of eggs laid by adult mosquitoes — F_eggs","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_eggs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of eggs laid by adult mosquitoes — F_eggs","text":"numeric vector length nPatches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_kappa.GeRM_dde.html","id":null,"dir":"Reference","previous_headings":"","what":"Net infectiousness of human population to mosquitoes — F_kappa.GeRM_dde","title":"Net infectiousness of human population to mosquitoes — F_kappa.GeRM_dde","text":"Implements F_kappa generalized GeRM DDE model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_kappa.GeRM_dde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Net infectiousness of human population to mosquitoes — F_kappa.GeRM_dde","text":"","code":"# S3 method for GeRM_dde F_kappa(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_kappa.GeRM_dde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Net infectiousness of human population to mosquitoes — F_kappa.GeRM_dde","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_kappa.GeRM_dde.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Net infectiousness of human population to mosquitoes — F_kappa.GeRM_dde","text":"numeric vector length nPatches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_kappa.GeRM_ode.html","id":null,"dir":"Reference","previous_headings":"","what":"Net infectiousness of human population to mosquitoes — F_kappa.GeRM_ode","title":"Net infectiousness of human population to mosquitoes — F_kappa.GeRM_ode","text":"Implements F_kappa generalized GeRM ODE model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_kappa.GeRM_ode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Net infectiousness of human population to mosquitoes — F_kappa.GeRM_ode","text":"","code":"# S3 method for GeRM_ode F_kappa(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_kappa.GeRM_ode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Net infectiousness of human population to mosquitoes — F_kappa.GeRM_ode","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_kappa.GeRM_ode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Net infectiousness of human population to mosquitoes — F_kappa.GeRM_ode","text":"numeric vector length nPatches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_kappa.html","id":null,"dir":"Reference","previous_headings":"","what":"Net infectiousness of human population to mosquitoes — F_kappa","title":"Net infectiousness of human population to mosquitoes — F_kappa","text":"method dispatches type pars$MYZpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_kappa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Net infectiousness of human population to mosquitoes — F_kappa","text":"","code":"F_kappa(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_kappa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Net infectiousness of human population to mosquitoes — F_kappa","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_kappa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Net infectiousness of human population to mosquitoes — F_kappa","text":"numeric vector length nPatches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_tau.GeRM.html","id":null,"dir":"Reference","previous_headings":"","what":"Time spent host seeking/feeding and resting/ovipositing — F_tau.GeRM","title":"Time spent host seeking/feeding and resting/ovipositing — F_tau.GeRM","text":"Implements F_tau generalized GeRM model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_tau.GeRM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time spent host seeking/feeding and resting/ovipositing — F_tau.GeRM","text":"","code":"# S3 method for GeRM F_tau(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_tau.GeRM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time spent host seeking/feeding and resting/ovipositing — F_tau.GeRM","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_tau.GeRM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time spent host seeking/feeding and resting/ovipositing — F_tau.GeRM","text":"NULL","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Time spent host seeking/feeding and resting/ovipositing — F_tau","title":"Time spent host seeking/feeding and resting/ovipositing — F_tau","text":"method dispatches type pars$MYZpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time spent host seeking/feeding and resting/ovipositing — F_tau","text":"","code":"F_tau(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time spent host seeking/feeding and resting/ovipositing — F_tau","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_tau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time spent host seeking/feeding and resting/ovipositing — F_tau","text":"either numeric vector model supports feature, NULL","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x.SIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Size of effective infectious human population — F_x.SIP","title":"Size of effective infectious human population — F_x.SIP","text":"Implements F_x SIP model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x.SIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Size of effective infectious human population — F_x.SIP","text":"","code":"# S3 method for SIP F_x(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_x.SIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Size of effective infectious human population — F_x.SIP","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x.SIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Size of effective infectious human population — F_x.SIP","text":"numeric vector length nStrata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x.SIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Size of effective infectious human population — F_x.SIS","title":"Size of effective infectious human population — F_x.SIS","text":"Implements F_x SIS model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x.SIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Size of effective infectious human population — F_x.SIS","text":"","code":"# S3 method for SIS F_x(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_x.SIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Size of effective infectious human population — F_x.SIS","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x.SIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Size of effective infectious human population — F_x.SIS","text":"numeric vector length nStrata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x.hMoI.html","id":null,"dir":"Reference","previous_headings":"","what":"Size of effective infectious human population — F_x.hMoI","title":"Size of effective infectious human population — F_x.hMoI","text":"Implements F_x hybrid MoI model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x.hMoI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Size of effective infectious human population — F_x.hMoI","text":"","code":"# S3 method for hMoI F_x(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_x.hMoI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Size of effective infectious human population — F_x.hMoI","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x.hMoI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Size of effective infectious human population — F_x.hMoI","text":"numeric vector length nStrata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Size of effective infectious human population — F_x","title":"Size of effective infectious human population — F_x","text":"method dispatches type pars$Xpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Size of effective infectious human population — F_x","text":"","code":"F_x(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/F_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Size of effective infectious human population — F_x","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Size of effective infectious human population — F_x","text":"numeric vector length nStrata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x_lag.SIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Size of lagged effective infectious human population — F_x_lag.SIP","title":"Size of lagged effective infectious human population — F_x_lag.SIP","text":"Implements F_x_lag SIP model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x_lag.SIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Size of lagged effective infectious human population — F_x_lag.SIP","text":"","code":"# S3 method for SIP F_x_lag(t, y, pars, lag)"},{"path":"https://dd-harp.github.io/exDE/reference/F_x_lag.SIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Size of lagged effective infectious human population — F_x_lag.SIP","text":"t current simulation time y state vector pars environment lag duration lag t-lag","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x_lag.SIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Size of lagged effective infectious human population — F_x_lag.SIP","text":"numeric vector length nStrata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x_lag.SIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Size of lagged effective infectious human population — F_x_lag.SIS","title":"Size of lagged effective infectious human population — F_x_lag.SIS","text":"Implements F_x_lag SIS model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x_lag.SIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Size of lagged effective infectious human population — F_x_lag.SIS","text":"","code":"# S3 method for SIS F_x_lag(t, y, pars, lag)"},{"path":"https://dd-harp.github.io/exDE/reference/F_x_lag.SIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Size of lagged effective infectious human population — F_x_lag.SIS","text":"t current simulation time y state vector pars environment lag duration lag t-lag","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x_lag.SIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Size of lagged effective infectious human population — F_x_lag.SIS","text":"numeric vector length nStrata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x_lag.hMoI.html","id":null,"dir":"Reference","previous_headings":"","what":"Size of lagged effective infectious human population — F_x_lag.hMoI","title":"Size of lagged effective infectious human population — F_x_lag.hMoI","text":"Implements F_x_lag hybrid MoI model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x_lag.hMoI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Size of lagged effective infectious human population — F_x_lag.hMoI","text":"","code":"# S3 method for hMoI F_x_lag(t, y, pars, lag)"},{"path":"https://dd-harp.github.io/exDE/reference/F_x_lag.hMoI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Size of lagged effective infectious human population — F_x_lag.hMoI","text":"t current simulation time y state vector pars environment lag duration lag t-lag","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x_lag.hMoI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Size of lagged effective infectious human population — F_x_lag.hMoI","text":"numeric vector length nStrata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x_lag.html","id":null,"dir":"Reference","previous_headings":"","what":"Size of lagged effective infectious human population — F_x_lag","title":"Size of lagged effective infectious human population — F_x_lag","text":"method dispatches type pars$Xpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x_lag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Size of lagged effective infectious human population — F_x_lag","text":"","code":"F_x_lag(t, y, pars, lag)"},{"path":"https://dd-harp.github.io/exDE/reference/F_x_lag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Size of lagged effective infectious human population — F_x_lag","text":"t current simulation time y state vector pars environment lag duration lag t-lag","code":""},{"path":"https://dd-harp.github.io/exDE/reference/F_x_lag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Size of lagged effective infectious human population — F_x_lag","text":"numeric vector length nStrata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/MosquitoBehavior.GeRM.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute bloodfeeding and mortality rates — MosquitoBehavior.GeRM","title":"Compute bloodfeeding and mortality rates — MosquitoBehavior.GeRM","text":"Implements MosquitoBehavior generalized GeRM model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/MosquitoBehavior.GeRM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute bloodfeeding and mortality rates — MosquitoBehavior.GeRM","text":"","code":"# S3 method for GeRM MosquitoBehavior(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/MosquitoBehavior.GeRM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute bloodfeeding and mortality rates — MosquitoBehavior.GeRM","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/MosquitoBehavior.GeRM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute bloodfeeding and mortality rates — MosquitoBehavior.GeRM","text":"named list","code":""},{"path":"https://dd-harp.github.io/exDE/reference/MosquitoBehavior.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute bloodfeeding and mortality rates — MosquitoBehavior","title":"Compute bloodfeeding and mortality rates — MosquitoBehavior","text":"method dispatches type pars$MYZpar. , minimum return values f, q, g (blood feeding rate, human feeding proportion, mortality rate) current time, although may return vectors values multiple times models delay. baseline values modified vector control component. return type named list 3 values, f  attr labeled time giving time(s) simulation bionomic values correspond .","code":""},{"path":"https://dd-harp.github.io/exDE/reference/MosquitoBehavior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute bloodfeeding and mortality rates — MosquitoBehavior","text":"","code":"MosquitoBehavior(t, y, pars)"},{"path":"https://dd-harp.github.io/exDE/reference/MosquitoBehavior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute bloodfeeding and mortality rates — MosquitoBehavior","text":"t current simulation time y state vector pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/MosquitoBehavior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute bloodfeeding and mortality rates — MosquitoBehavior","text":"list","code":""},{"path":"https://dd-harp.github.io/exDE/reference/VectorControl.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify baseline values due to vector control — VectorControl","title":"Modify baseline values due to vector control — VectorControl","text":"method dispatches type pars$VCpar. takes baseline MosyBehavior values modifies , potentially multiple time points models delay.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/VectorControl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify baseline values due to vector control — VectorControl","text":"","code":"VectorControl(t, y, pars, MosyBehavior)"},{"path":"https://dd-harp.github.io/exDE/reference/VectorControl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify baseline values due to vector control — VectorControl","text":"t current simulation time y state vector pars environment MosyBehavior values returned MosquitoBehavior","code":""},{"path":"https://dd-harp.github.io/exDE/reference/VectorControl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify baseline values due to vector control — VectorControl","text":"list","code":""},{"path":"https://dd-harp.github.io/exDE/reference/VectorControl.lemenach.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify baseline values due to vector control — VectorControl.lemenach","title":"Modify baseline values due to vector control — VectorControl.lemenach","text":"Implements VectorControl Le Menach ITN model vector control","code":""},{"path":"https://dd-harp.github.io/exDE/reference/VectorControl.lemenach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify baseline values due to vector control — VectorControl.lemenach","text":"","code":"# S3 method for lemenach VectorControl(t, y, pars, MosyBehavior)"},{"path":"https://dd-harp.github.io/exDE/reference/VectorControl.lemenach.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify baseline values due to vector control — VectorControl.lemenach","text":"t current simulation time y state vector pars environment MosyBehavior values returned MosquitoBehavior","code":""},{"path":"https://dd-harp.github.io/exDE/reference/VectorControl.lemenach.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify baseline values due to vector control — VectorControl.lemenach","text":"named list","code":""},{"path":"https://dd-harp.github.io/exDE/reference/VectorControl.null.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify baseline values due to vector control — VectorControl.null","title":"Modify baseline values due to vector control — VectorControl.null","text":"Implements VectorControl null model vector control (nothing)","code":""},{"path":"https://dd-harp.github.io/exDE/reference/VectorControl.null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify baseline values due to vector control — VectorControl.null","text":"","code":"# S3 method for null VectorControl(t, y, pars, MosyBehavior)"},{"path":"https://dd-harp.github.io/exDE/reference/VectorControl.null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify baseline values due to vector control — VectorControl.null","text":"t current simulation time y state vector pars environment MosyBehavior values returned MosquitoBehavior","code":""},{"path":"https://dd-harp.github.io/exDE/reference/VectorControl.null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify baseline values due to vector control — VectorControl.null","text":"named list","code":""},{"path":"https://dd-harp.github.io/exDE/reference/approx_equal.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two numeric values are approximately equal — approx_equal","title":"Check if two numeric values are approximately equal — approx_equal","text":"Check two numeric values approximately equal","code":""},{"path":"https://dd-harp.github.io/exDE/reference/approx_equal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two numeric values are approximately equal — approx_equal","text":"","code":"approx_equal(a, b, tol = sqrt(.Machine$double.eps))"},{"path":"https://dd-harp.github.io/exDE/reference/approx_equal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two numeric values are approximately equal — approx_equal","text":"numeric object b numeric object tol numeric tolerance","code":""},{"path":"https://dd-harp.github.io/exDE/reference/approx_equal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if two numeric values are approximately equal — approx_equal","text":"logical value","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dLdt.basic.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivatives for aquatic stage mosquitoes — dLdt.basic","title":"Derivatives for aquatic stage mosquitoes — dLdt.basic","text":"Implements dLdt basic competition model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dLdt.basic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivatives for aquatic stage mosquitoes — dLdt.basic","text":"","code":"# S3 method for basic dLdt(t, y, pars, eta)"},{"path":"https://dd-harp.github.io/exDE/reference/dLdt.basic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivatives for aquatic stage mosquitoes — dLdt.basic","text":"t current simulation time y state vector pars environment eta vector giving number eggs laid larval habitat","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dLdt.basic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivatives for aquatic stage mosquitoes — dLdt.basic","text":"numeric vector","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dLdt.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivatives for aquatic stage mosquitoes — dLdt","title":"Derivatives for aquatic stage mosquitoes — dLdt","text":"method dispatches type pars$Lpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dLdt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivatives for aquatic stage mosquitoes — dLdt","text":"","code":"dLdt(t, y, pars, eta)"},{"path":"https://dd-harp.github.io/exDE/reference/dLdt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivatives for aquatic stage mosquitoes — dLdt","text":"t current simulation time y state vector pars environment eta vector giving number eggs laid larval habitat","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dLdt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivatives for aquatic stage mosquitoes — dLdt","text":"numeric vector length pars$L_ix","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dLdt.trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivatives for aquatic stage mosquitoes — dLdt.trace","title":"Derivatives for aquatic stage mosquitoes — dLdt.trace","text":"Implements dLdt trace (forced emergence) model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dLdt.trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivatives for aquatic stage mosquitoes — dLdt.trace","text":"","code":"# S3 method for trace dLdt(t, y, pars, eta)"},{"path":"https://dd-harp.github.io/exDE/reference/dLdt.trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivatives for aquatic stage mosquitoes — dLdt.trace","text":"t current simulation time y state vector pars environment eta vector giving number eggs laid larval habitat","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dLdt.trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivatives for aquatic stage mosquitoes — dLdt.trace","text":"numeric vector","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dMYZdt.GeRM_dde.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivatives for adult mosquitoes — dMYZdt.GeRM_dde","title":"Derivatives for adult mosquitoes — dMYZdt.GeRM_dde","text":"Implements dMYZdt generalized GeRM DDE model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dMYZdt.GeRM_dde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivatives for adult mosquitoes — dMYZdt.GeRM_dde","text":"","code":"# S3 method for GeRM_dde dMYZdt(t, y, pars, Lambda, kappa, MosyBehavior)"},{"path":"https://dd-harp.github.io/exDE/reference/dMYZdt.GeRM_dde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivatives for adult mosquitoes — dMYZdt.GeRM_dde","text":"t current simulation time y state vector pars environment Lambda emergence rate adult mosquitoes kappa net infectiousness human population MosyBehavior values returned MosquitoBehavior, potentially modified control VectorControl","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dMYZdt.GeRM_dde.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivatives for adult mosquitoes — dMYZdt.GeRM_dde","text":"numeric vector","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dMYZdt.GeRM_ode.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivatives for adult mosquitoes — dMYZdt.GeRM_ode","title":"Derivatives for adult mosquitoes — dMYZdt.GeRM_ode","text":"Implements dMYZdt generalized GeRM ODE model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dMYZdt.GeRM_ode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivatives for adult mosquitoes — dMYZdt.GeRM_ode","text":"","code":"# S3 method for GeRM_ode dMYZdt(t, y, pars, Lambda, kappa, MosyBehavior)"},{"path":"https://dd-harp.github.io/exDE/reference/dMYZdt.GeRM_ode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivatives for adult mosquitoes — dMYZdt.GeRM_ode","text":"t current simulation time y state vector pars environment Lambda emergence rate adult mosquitoes kappa net infectiousness human population MosyBehavior values returned MosquitoBehavior, potentially modified control VectorControl","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dMYZdt.GeRM_ode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivatives for adult mosquitoes — dMYZdt.GeRM_ode","text":"numeric vector","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dMYZdt.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivatives for adult mosquitoes — dMYZdt","title":"Derivatives for adult mosquitoes — dMYZdt","text":"method dispatches type pars$MYZpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dMYZdt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivatives for adult mosquitoes — dMYZdt","text":"","code":"dMYZdt(t, y, pars, Lambda, kappa, MosyBehavior)"},{"path":"https://dd-harp.github.io/exDE/reference/dMYZdt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivatives for adult mosquitoes — dMYZdt","text":"t current simulation time y state vector pars environment Lambda emergence rate adult mosquitoes kappa net infectiousness human population MosyBehavior values returned MosquitoBehavior, potentially modified control VectorControl","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dMYZdt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivatives for adult mosquitoes — dMYZdt","text":"numeric vector","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dXdt.SIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivatives for human population — dXdt.SIP","title":"Derivatives for human population — dXdt.SIP","text":"Implements dXdt SIP model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dXdt.SIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivatives for human population — dXdt.SIP","text":"","code":"# S3 method for SIP dXdt(t, y, pars, EIR)"},{"path":"https://dd-harp.github.io/exDE/reference/dXdt.SIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivatives for human population — dXdt.SIP","text":"t current simulation time y state vector pars environment EIR vector giving per-capita entomological inoculation rate strata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dXdt.SIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivatives for human population — dXdt.SIP","text":"numeric vector","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dXdt.SIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivatives for human population — dXdt.SIS","title":"Derivatives for human population — dXdt.SIS","text":"Implements dXdt SIS model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dXdt.SIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivatives for human population — dXdt.SIS","text":"","code":"# S3 method for SIS dXdt(t, y, pars, EIR)"},{"path":"https://dd-harp.github.io/exDE/reference/dXdt.SIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivatives for human population — dXdt.SIS","text":"t current simulation time y state vector pars environment EIR vector giving per-capita entomological inoculation rate strata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dXdt.SIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivatives for human population — dXdt.SIS","text":"numeric vector","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dXdt.hMoI.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivatives for human population — dXdt.hMoI","title":"Derivatives for human population — dXdt.hMoI","text":"Implements dXdt hybrid MoI model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dXdt.hMoI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivatives for human population — dXdt.hMoI","text":"","code":"# S3 method for hMoI dXdt(t, y, pars, EIR)"},{"path":"https://dd-harp.github.io/exDE/reference/dXdt.hMoI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivatives for human population — dXdt.hMoI","text":"t current simulation time y state vector pars environment EIR vector giving per-capita entomological inoculation rate strata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dXdt.hMoI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivatives for human population — dXdt.hMoI","text":"numeric vector","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dXdt.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivatives for human population — dXdt","title":"Derivatives for human population — dXdt","text":"method dispatches type pars$Xpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dXdt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivatives for human population — dXdt","text":"","code":"dXdt(t, y, pars, EIR)"},{"path":"https://dd-harp.github.io/exDE/reference/dXdt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivatives for human population — dXdt","text":"t current simulation time y state vector pars environment EIR vector giving per-capita entomological inoculation rate strata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/dXdt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivatives for human population — dXdt","text":"numeric vector","code":""},{"path":"https://dd-harp.github.io/exDE/reference/diag_inverse.html","id":null,"dir":"Reference","previous_headings":"","what":"Invert a diagonal matrix — diag_inverse","title":"Invert a diagonal matrix — diag_inverse","text":"Invert diagonal matrix passed vector. elements zero, set one.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/diag_inverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invert a diagonal matrix — diag_inverse","text":"","code":"diag_inverse(x)"},{"path":"https://dd-harp.github.io/exDE/reference/diag_inverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invert a diagonal matrix — diag_inverse","text":"x numeric vector","code":""},{"path":"https://dd-harp.github.io/exDE/reference/diag_inverse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Invert a diagonal matrix — diag_inverse","text":"diagonal matrix","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_Omega.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the mosquito demography matrix — make_Omega","title":"Make the mosquito demography matrix — make_Omega","text":"Make mosquito demography matrix","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_Omega.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the mosquito demography matrix — make_Omega","text":"","code":"make_Omega(g, sigma, K, nPatches)"},{"path":"https://dd-harp.github.io/exDE/reference/make_Omega.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the mosquito demography matrix — make_Omega","text":"g mortality rate sigma emigration  rate K mosquito dispersal matrix nPatches number patches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_Omega.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the mosquito demography matrix — make_Omega","text":"matrix dimensions nPatches nPatches","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_L.basic.html","id":null,"dir":"Reference","previous_headings":"","what":"Add indices for aquatic stage mosquitoes to parameter list — make_index_L.basic","title":"Add indices for aquatic stage mosquitoes to parameter list — make_index_L.basic","text":"Implements make_index_L basic competition model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_L.basic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add indices for aquatic stage mosquitoes to parameter list — make_index_L.basic","text":"","code":"# S3 method for basic make_index_L(pars)"},{"path":"https://dd-harp.github.io/exDE/reference/make_index_L.basic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add indices for aquatic stage mosquitoes to parameter list — make_index_L.basic","text":"pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_L.basic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add indices for aquatic stage mosquitoes to parameter list — make_index_L.basic","text":"modified parameter list","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_L.html","id":null,"dir":"Reference","previous_headings":"","what":"Add indices for aquatic stage mosquitoes to parameter list — make_index_L","title":"Add indices for aquatic stage mosquitoes to parameter list — make_index_L","text":"method dispatches type pars$Lpar. Adds field L_ix parameter list.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_L.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add indices for aquatic stage mosquitoes to parameter list — make_index_L","text":"","code":"make_index_L(pars)"},{"path":"https://dd-harp.github.io/exDE/reference/make_index_L.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add indices for aquatic stage mosquitoes to parameter list — make_index_L","text":"pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_L.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add indices for aquatic stage mosquitoes to parameter list — make_index_L","text":"modified parameter list","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_L.trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Add indices for aquatic stage mosquitoes to parameter list — make_index_L.trace","title":"Add indices for aquatic stage mosquitoes to parameter list — make_index_L.trace","text":"Implements make_index_L trace (forced emergence) model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_L.trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add indices for aquatic stage mosquitoes to parameter list — make_index_L.trace","text":"","code":"# S3 method for trace make_index_L(pars)"},{"path":"https://dd-harp.github.io/exDE/reference/make_index_L.trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add indices for aquatic stage mosquitoes to parameter list — make_index_L.trace","text":"pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_L.trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add indices for aquatic stage mosquitoes to parameter list — make_index_L.trace","text":"modified parameter list","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_MYZ.GeRM.html","id":null,"dir":"Reference","previous_headings":"","what":"Add indices for adult mosquitoes to parameter list — make_index_MYZ.GeRM","title":"Add indices for adult mosquitoes to parameter list — make_index_MYZ.GeRM","text":"Implements make_index_MYZ generalized GeRM model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_MYZ.GeRM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add indices for adult mosquitoes to parameter list — make_index_MYZ.GeRM","text":"","code":"# S3 method for GeRM make_index_MYZ(pars)"},{"path":"https://dd-harp.github.io/exDE/reference/make_index_MYZ.GeRM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add indices for adult mosquitoes to parameter list — make_index_MYZ.GeRM","text":"pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_MYZ.GeRM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add indices for adult mosquitoes to parameter list — make_index_MYZ.GeRM","text":"modified parameter list","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_MYZ.html","id":null,"dir":"Reference","previous_headings":"","what":"Add indices for adult mosquitoes to parameter list — make_index_MYZ","title":"Add indices for adult mosquitoes to parameter list — make_index_MYZ","text":"method dispatches type pars$MYZpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_MYZ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add indices for adult mosquitoes to parameter list — make_index_MYZ","text":"","code":"make_index_MYZ(pars)"},{"path":"https://dd-harp.github.io/exDE/reference/make_index_MYZ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add indices for adult mosquitoes to parameter list — make_index_MYZ","text":"pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_MYZ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add indices for adult mosquitoes to parameter list — make_index_MYZ","text":"modified parameter list","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_X.SIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Add indices for human population to parameter list — make_index_X.SIP","title":"Add indices for human population to parameter list — make_index_X.SIP","text":"Implements make_index_X SIP model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_X.SIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add indices for human population to parameter list — make_index_X.SIP","text":"","code":"# S3 method for SIP make_index_X(pars)"},{"path":"https://dd-harp.github.io/exDE/reference/make_index_X.SIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add indices for human population to parameter list — make_index_X.SIP","text":"pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_X.SIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add indices for human population to parameter list — make_index_X.SIP","text":"modified parameter list","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_X.SIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Add indices for human population to parameter list — make_index_X.SIS","title":"Add indices for human population to parameter list — make_index_X.SIS","text":"Implements make_index_X SIS model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_X.SIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add indices for human population to parameter list — make_index_X.SIS","text":"","code":"# S3 method for SIS make_index_X(pars)"},{"path":"https://dd-harp.github.io/exDE/reference/make_index_X.SIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add indices for human population to parameter list — make_index_X.SIS","text":"pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_X.SIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add indices for human population to parameter list — make_index_X.SIS","text":"modified parameter list","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_X.hMoI.html","id":null,"dir":"Reference","previous_headings":"","what":"Add indices for human population to parameter list — make_index_X.hMoI","title":"Add indices for human population to parameter list — make_index_X.hMoI","text":"Implements make_index_X hybrid MoI model.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_X.hMoI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add indices for human population to parameter list — make_index_X.hMoI","text":"","code":"# S3 method for hMoI make_index_X(pars)"},{"path":"https://dd-harp.github.io/exDE/reference/make_index_X.hMoI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add indices for human population to parameter list — make_index_X.hMoI","text":"pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_X.hMoI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add indices for human population to parameter list — make_index_X.hMoI","text":"modified parameter list","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_X.html","id":null,"dir":"Reference","previous_headings":"","what":"Add indices for human population to parameter list — make_index_X","title":"Add indices for human population to parameter list — make_index_X","text":"method dispatches type pars$Xpar.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_X.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add indices for human population to parameter list — make_index_X","text":"","code":"make_index_X(pars)"},{"path":"https://dd-harp.github.io/exDE/reference/make_index_X.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add indices for human population to parameter list — make_index_X","text":"pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_index_X.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add indices for human population to parameter list — make_index_X","text":"modified parameter list","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Set indices for generalized spatial model — make_indices","title":"Set indices for generalized spatial model — make_indices","text":"Set indices generalized spatial model","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set indices for generalized spatial model — make_indices","text":"","code":"make_indices(pars)"},{"path":"https://dd-harp.github.io/exDE/reference/make_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set indices for generalized spatial model — make_indices","text":"pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set indices for generalized spatial model — make_indices","text":"none","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_L_basic.html","id":null,"dir":"Reference","previous_headings":"","what":"Make parameters for basic competition aquatic mosquito model — make_parameters_L_basic","title":"Make parameters for basic competition aquatic mosquito model — make_parameters_L_basic","text":"Make parameters basic competition aquatic mosquito model","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_L_basic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make parameters for basic competition aquatic mosquito model — make_parameters_L_basic","text":"","code":"make_parameters_L_basic(pars, psi, phi, theta, L0)"},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_L_basic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make parameters for basic competition aquatic mosquito model — make_parameters_L_basic","text":"pars environment psi maturation rates aquatic habitat phi density-independent mortality rates aquatic habitat theta density-dependent mortality terms aquatic habitat L0 initial conditions","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_L_basic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make parameters for basic competition aquatic mosquito model — make_parameters_L_basic","text":"list class basic.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_L_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Make parameters for trace aquatic mosquito model — make_parameters_L_trace","title":"Make parameters for trace aquatic mosquito model — make_parameters_L_trace","text":"Make parameters trace aquatic mosquito model","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_L_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make parameters for trace aquatic mosquito model — make_parameters_L_trace","text":"","code":"make_parameters_L_trace(pars, Lambda)"},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_L_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make parameters for trace aquatic mosquito model — make_parameters_L_trace","text":"pars environment Lambda vector emergence rates aquatic habitat","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_L_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make parameters for trace aquatic mosquito model — make_parameters_L_trace","text":"list class trace.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_MYZ_GeRM_dde.html","id":null,"dir":"Reference","previous_headings":"","what":"Make parameters for generalized GeRM DDE adult mosquito model — make_parameters_MYZ_GeRM_dde","title":"Make parameters for generalized GeRM DDE adult mosquito model — make_parameters_MYZ_GeRM_dde","text":"Make parameters generalized GeRM DDE adult mosquito model","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_MYZ_GeRM_dde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make parameters for generalized GeRM DDE adult mosquito model — make_parameters_MYZ_GeRM_dde","text":"","code":"make_parameters_MYZ_GeRM_dde(   pars,   g,   sigma,   calK,   f,   q,   nu,   eggsPerBatch,   tau,   M0,   G0,   Y0,   Z0 )"},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_MYZ_GeRM_dde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make parameters for generalized GeRM DDE adult mosquito model — make_parameters_MYZ_GeRM_dde","text":"pars environment g mosquito mortality rate sigma emigration rate calK mosquito dispersal matrix dimensions nPatches nPatches f feeding rate q human blood fraction nu oviposition rate gravid mosquitoes eggsPerBatch eggs laid per oviposition tau length extrinsic incubation period M0 total mosquito density patch G0 gravid mosquito density patch Y0 infected mosquito density patch Z0 infectious mosquito density patch","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_MYZ_GeRM_dde.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make parameters for generalized GeRM DDE adult mosquito model — make_parameters_MYZ_GeRM_dde","text":"none","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_MYZ_GeRM_ode.html","id":null,"dir":"Reference","previous_headings":"","what":"Make parameters for generalized GeRM ODE adult mosquito model — make_parameters_MYZ_GeRM_ode","title":"Make parameters for generalized GeRM ODE adult mosquito model — make_parameters_MYZ_GeRM_ode","text":"Make parameters generalized GeRM ODE adult mosquito model","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_MYZ_GeRM_ode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make parameters for generalized GeRM ODE adult mosquito model — make_parameters_MYZ_GeRM_ode","text":"","code":"make_parameters_MYZ_GeRM_ode(   pars,   g,   sigma,   calK,   f,   q,   nu,   eggsPerBatch,   tau,   M0,   G0,   Y0,   Z0 )"},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_MYZ_GeRM_ode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make parameters for generalized GeRM ODE adult mosquito model — make_parameters_MYZ_GeRM_ode","text":"pars environment g mosquito mortality rate sigma emigration rate calK mosquito dispersal matrix dimensions nPatches nPatches f feeding rate q human blood fraction nu oviposition rate gravid mosquitoes eggsPerBatch eggs laid per oviposition tau length extrinsic incubation period M0 total mosquito density patch G0 gravid mosquito density patch Y0 infected mosquito density patch Z0 infectious mosquito density patch","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_MYZ_GeRM_ode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make parameters for generalized GeRM ODE adult mosquito model — make_parameters_MYZ_GeRM_ode","text":"none","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_X_SIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Make parameters for SIP human model — make_parameters_X_SIP","title":"Make parameters for SIP human model — make_parameters_X_SIP","text":"Make parameters SIP human model","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_X_SIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make parameters for SIP human model — make_parameters_X_SIP","text":"","code":"make_parameters_X_SIP(pars, b, c, r, rho, eta, Psi, wf = 1, X0, P0, H)"},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_X_SIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make parameters for SIP human model — make_parameters_X_SIP","text":"pars environment b transmission probability (efficiency) mosquito human c transmission probability (efficiency) human mosquito r recovery rate rho probability successful treatment upon infection eta prophylaxis waning rate Psi matrix dimensions nPatches nStrata wf vector biting weights length nStrata X0 size infected population strata P0 size population protected prophylaxis strata H size human population strata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_X_SIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make parameters for SIP human model — make_parameters_X_SIP","text":"list class SIP.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_X_SIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Make parameters for SIS human model — make_parameters_X_SIS","title":"Make parameters for SIS human model — make_parameters_X_SIS","text":"Make parameters SIS human model","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_X_SIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make parameters for SIS human model — make_parameters_X_SIS","text":"","code":"make_parameters_X_SIS(pars, b, c, r, Psi, wf = 1, X0, H)"},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_X_SIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make parameters for SIS human model — make_parameters_X_SIS","text":"pars environment b transmission probability (efficiency) mosquito human c transmission probability (efficiency) human mosquito r recovery rate Psi matrix dimensions nPatches nStrata wf vector biting weights length nStrata X0 size infected population strata H size human population strata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_X_SIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make parameters for SIS human model — make_parameters_X_SIS","text":"list class SIS.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_X_hMoI.html","id":null,"dir":"Reference","previous_headings":"","what":"Make parameters for hybrid MoI human model — make_parameters_X_hMoI","title":"Make parameters for hybrid MoI human model — make_parameters_X_hMoI","text":"MoI stands Multiplicity Infection, refers malarial superinfection.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_X_hMoI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make parameters for hybrid MoI human model — make_parameters_X_hMoI","text":"","code":"make_parameters_X_hMoI(pars, b, c1, c2, r1, r2, Psi, wf = 1, m10, m20, H)"},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_X_hMoI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make parameters for hybrid MoI human model — make_parameters_X_hMoI","text":"pars environment b transmission probability (efficiency) mosquito human c1 transmission probability (efficiency) inapparent human infections mosquito c2 transmission probability (efficiency) patent human infections mosquito r1 recovery rate inapparent infections r2 recovery rate patent infections Psi matrix dimensions nPatches nStrata wf vector biting weights length nStrata m10 mean MoI among inapparent human infections m20 mean MoI among patent human infections H size human population strata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_X_hMoI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make parameters for hybrid MoI human model — make_parameters_X_hMoI","text":"list class hMoI.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_exogenous_null.html","id":null,"dir":"Reference","previous_headings":"","what":"Make parameters for the null model of exogenous forcing (do nothing) — make_parameters_exogenous_null","title":"Make parameters for the null model of exogenous forcing (do nothing) — make_parameters_exogenous_null","text":"Make parameters null model exogenous forcing (nothing)","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_exogenous_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make parameters for the null model of exogenous forcing (do nothing) — make_parameters_exogenous_null","text":"","code":"make_parameters_exogenous_null(pars)"},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_exogenous_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make parameters for the null model of exogenous forcing (do nothing) — make_parameters_exogenous_null","text":"pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_exogenous_null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make parameters for the null model of exogenous forcing (do nothing) — make_parameters_exogenous_null","text":"none","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_vc_lemenach.html","id":null,"dir":"Reference","previous_headings":"","what":"Make parameters for Le Menach ITN model of vector control — make_parameters_vc_lemenach","title":"Make parameters for Le Menach ITN model of vector control — make_parameters_vc_lemenach","text":"model ITN based vector control originally described https://malariajournal.biomedcentral.com/articles/10.1186/1475-2875-6-10.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_vc_lemenach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make parameters for Le Menach ITN model of vector control — make_parameters_vc_lemenach","text":"","code":"make_parameters_vc_lemenach(   pars,   tau0_frac = c(0.68/3, 2.32/3),   r = 0.56,   s = 0.03,   phi = function(t) {      0  } )"},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_vc_lemenach.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make parameters for Le Menach ITN model of vector control — make_parameters_vc_lemenach","text":"pars environment tau0_frac numeric vector giving proportion time spent host seeking/bloodfeeding resting/oviposition r probability mosquito repelled upon contact ITN s probability mosquito successfully feeding upon contact ITN phi function takes single argument t returns level ITN coverage time","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_vc_lemenach.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make parameters for Le Menach ITN model of vector control — make_parameters_vc_lemenach","text":"none","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_vc_null.html","id":null,"dir":"Reference","previous_headings":"","what":"Make parameters for the null model of vector control (do nothing) — make_parameters_vc_null","title":"Make parameters for the null model of vector control (do nothing) — make_parameters_vc_null","text":"Make parameters null model vector control (nothing)","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_vc_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make parameters for the null model of vector control (do nothing) — make_parameters_vc_null","text":"","code":"make_parameters_vc_null(pars)"},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_vc_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make parameters for the null model of vector control (do nothing) — make_parameters_vc_null","text":"pars environment","code":""},{"path":"https://dd-harp.github.io/exDE/reference/make_parameters_vc_null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make parameters for the null model of vector control (do nothing) — make_parameters_vc_null","text":"none","code":""},{"path":"https://dd-harp.github.io/exDE/reference/metric_calD.html","id":null,"dir":"Reference","previous_headings":"","what":"Parasite dispersal by humans — metric_calD","title":"Parasite dispersal by humans — metric_calD","text":"Compute p p matrix \\(\\mathcal{D}\\) whose columns describe potentially infectious person time persons patch dispersed across patches. $$\\mathcal{D} = \\mbox{diag}\\left(W \\right) \\cdot \\beta^T \\cdot \\mbox{diag}\\left(bDH\\right) \\cdot \\beta$$","code":""},{"path":"https://dd-harp.github.io/exDE/reference/metric_calD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parasite dispersal by humans — metric_calD","text":"","code":"metric_calD(W, beta, b, D, H)"},{"path":"https://dd-harp.github.io/exDE/reference/metric_calD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parasite dispersal by humans — metric_calD","text":"W ambient human population patch beta biting distribution matrix b transmission efficiency mosquitoes humans D human transmitting capacity H human population size strata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/metric_calD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parasite dispersal by humans — metric_calD","text":"numeric matrix","code":""},{"path":"https://dd-harp.github.io/exDE/reference/metric_calR.html","id":null,"dir":"Reference","previous_headings":"","what":"Parasite Dispersal through one Parasite Generation (Humans) — metric_calR","title":"Parasite Dispersal through one Parasite Generation (Humans) — metric_calR","text":"Computes n n matrix describing parasite dispersal infecteds (columns) infectees (rows). $$\\mathcal{R} =   b \\beta \\cdot {\\cal V}  \\cdot \\mbox{diag}\\left(W \\right) \\cdot \\beta^T  \\cdot \\mbox{diag}\\left(DH\\right)$$","code":""},{"path":"https://dd-harp.github.io/exDE/reference/metric_calR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parasite Dispersal through one Parasite Generation (Humans) — metric_calR","text":"","code":"metric_calR(b, beta, calV, W, D, H)"},{"path":"https://dd-harp.github.io/exDE/reference/metric_calR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parasite Dispersal through one Parasite Generation (Humans) — metric_calR","text":"b transmission efficiency mosquitoes humans beta biting distribution matrix calV parasite dispersal mosquitoes matrix (see metric_calV) W ambient human population patch D human transmitting capacity H human population size strata","code":""},{"path":"https://dd-harp.github.io/exDE/reference/metric_calR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parasite Dispersal through one Parasite Generation (Humans) — metric_calR","text":"numeric matrix","code":""},{"path":"https://dd-harp.github.io/exDE/reference/metric_calV.html","id":null,"dir":"Reference","previous_headings":"","what":"Parasite dispersal by mosquitoes — metric_calV","title":"Parasite dispersal by mosquitoes — metric_calV","text":"Compute p p matrix \\(\\mathcal{V}\\) whose columns describe infective bites arising mosquitoes biting single human single day dispersed patches, accounting movement mortality. $$\\mathcal{V} = fq\\Omega^{-1} \\cdot e^{-\\Omega\\tau} \\cdot \\mbox{diag}\\left(\\frac{fqM}{W}\\right)$$","code":""},{"path":"https://dd-harp.github.io/exDE/reference/metric_calV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parasite dispersal by mosquitoes — metric_calV","text":"","code":"metric_calV(f, q, Omega, tau, M, W)"},{"path":"https://dd-harp.github.io/exDE/reference/metric_calV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parasite dispersal by mosquitoes — metric_calV","text":"f feeding rate q fraction bloodmeals taken humans Omega mosquito demography matrix tau duration extrinsic incubation period M size mosquito population patch W ambient human population patch","code":""},{"path":"https://dd-harp.github.io/exDE/reference/metric_calV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parasite dispersal by mosquitoes — metric_calV","text":"numeric matrix","code":""},{"path":"https://dd-harp.github.io/exDE/reference/metric_calZ.html","id":null,"dir":"Reference","previous_headings":"","what":"Parasite Dispersal through one Parasite Generation (Mosquitoes) — metric_calZ","title":"Parasite Dispersal through one Parasite Generation (Mosquitoes) — metric_calZ","text":"Computes p p matrix describing parasite dispersal infecteds (columns) infectees (rows). $$\\mathcal{Z} = e^{-\\Omega\\tau} \\cdot \\mbox{diag}\\left( \\frac{fq M}{W} \\right) \\cdot {\\cal D} \\cdot  fq\\Omega^{-1}$$","code":""},{"path":"https://dd-harp.github.io/exDE/reference/metric_calZ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parasite Dispersal through one Parasite Generation (Mosquitoes) — metric_calZ","text":"","code":"metric_calZ(Omega, tau, f, q, M, W, calD)"},{"path":"https://dd-harp.github.io/exDE/reference/metric_calZ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parasite Dispersal through one Parasite Generation (Mosquitoes) — metric_calZ","text":"Omega mosquito demography matrix tau duration extrinsic incubation period f feeding rate q fraction bloodmeals taken humans M size mosquito population patch W ambient human population patch calD parasite dispersal humans matrix (see metric_calD)","code":""},{"path":"https://dd-harp.github.io/exDE/reference/metric_calZ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parasite Dispersal through one Parasite Generation (Mosquitoes) — metric_calZ","text":"numeric matrix","code":""},{"path":"https://dd-harp.github.io/exDE/reference/xDE_diffeqn.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized spatial differential equation model — xDE_diffeqn","title":"Generalized spatial differential equation model — xDE_diffeqn","text":"Compute derivatives deSolve::ode deSolve::dede using generic methods model component. arguments EIR_delta kappa_delta adding external forcing system unmodeled sources. can arise humans can acquire infection traveling outside spatial domain, arises mosquitoes traveling outside spatial domain infected unmodeled (non-human) sources. default set NULL turned .","code":""},{"path":"https://dd-harp.github.io/exDE/reference/xDE_diffeqn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized spatial differential equation model — xDE_diffeqn","text":"","code":"xDE_diffeqn(t, y, pars, EIR_delta = NULL, kappa_delta = NULL)"},{"path":"https://dd-harp.github.io/exDE/reference/xDE_diffeqn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized spatial differential equation model — xDE_diffeqn","text":"t current simulation time y state vector pars environment EIR_delta vector values added internal EIR kappa_delta vector values added internal kappa","code":""},{"path":"https://dd-harp.github.io/exDE/reference/xDE_diffeqn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized spatial differential equation model — xDE_diffeqn","text":"list containing vector state derivatives","code":""},{"path":"https://dd-harp.github.io/exDE/reference/xDE_diffeqn_mosy.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized spatial differential equation model (mosquito only) — xDE_diffeqn_mosy","title":"Generalized spatial differential equation model (mosquito only) — xDE_diffeqn_mosy","text":"Mirrors xDE_diffeqn includes adult aquatic mosquito components.","code":""},{"path":"https://dd-harp.github.io/exDE/reference/xDE_diffeqn_mosy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized spatial differential equation model (mosquito only) — xDE_diffeqn_mosy","text":"","code":"xDE_diffeqn_mosy(t, y, pars, kappa, MosyBehavior)"},{"path":"https://dd-harp.github.io/exDE/reference/xDE_diffeqn_mosy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized spatial differential equation model (mosquito only) — xDE_diffeqn_mosy","text":"t current simulation time y state vector pars environment kappa vector MosyBehavior list emulating output MosquitoBehavior appropriate adult mosquito model","code":""},{"path":"https://dd-harp.github.io/exDE/reference/xDE_diffeqn_mosy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized spatial differential equation model (mosquito only) — xDE_diffeqn_mosy","text":"list containing vector state derivatives","code":""},{"path":"https://dd-harp.github.io/exDE/news/index.html","id":"exde-100","dir":"Changelog","previous_headings":"","what":"exDE 1.0.0","title":"exDE 1.0.0","text":"CRAN release: 2022-11-18 Extensive update include exogenous forcing weather, climate, etc. well vector control, including ITN-based model vector control Extended documentation Extended testing Include CITATION file pre-print Re-submit CRAN","code":""},{"path":"https://dd-harp.github.io/exDE/news/index.html","id":"exde-010","dir":"Changelog","previous_headings":"","what":"exDE 0.1.0","title":"exDE 0.1.0","text":"Initial release exDE CRAN.","code":""}]
